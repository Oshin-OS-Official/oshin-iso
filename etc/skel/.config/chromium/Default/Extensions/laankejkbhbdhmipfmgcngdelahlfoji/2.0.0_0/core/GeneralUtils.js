define(["core/Logger"],function(Logger){return{firstToLower:function(str){return"string"==typeof str?str.toLowerCase()[0]+str.slice(1):str},firstToUpper:function(str){return"string"==typeof str?str.toUpperCase()[0]+str.slice(1):str},isEmpty:function(value){return null===value||""===value||void 0===value},sanitizeMSWordChars:function(text){return text=(text=(text=(text=(text=(text=(text=(text=text.replace(/[\u2018\u2019\u201A]/g,"'")).replace(/[\u201C\u201D\u201E]/g,'"')).replace(/\u2026/g,"...")).replace(/[\u2013\u2014]/g,"--")).replace(/\u02C6/g,"^")).replace(/\u2039/g,"<")).replace(/\u203A/g,">")).replace(/[\u02DC\u00A0]/g," ")},getDecoupledPromise(){let resolve,reject;var promise=new Promise((res,rej)=>{resolve=res,reject=rej});return{resolve:resolve,reject:reject,promise:promise}},createScopedLog(scope){return(funcName,message,payload,level)=>{Logger.log(scope+"."+funcName,message,payload,level)}},isTopFrame(){return window.self===window.top},initAPI:function(API){API.mixin("Utils",{firstToLower:this.firstToLower.bind(this),firstToUpper:this.firstToUpper.bind(this),isEmpty:this.isEmpty.bind(this),sanitizeMSWordChars:this.sanitizeMSWordChars.bind(this),getDecoupledPromise:this.getDecoupledPromise.bind(this),createScopedLog:this.createScopedLog.bind(this),isTopFrame:this.isTopFrame.bind(this)})}}});