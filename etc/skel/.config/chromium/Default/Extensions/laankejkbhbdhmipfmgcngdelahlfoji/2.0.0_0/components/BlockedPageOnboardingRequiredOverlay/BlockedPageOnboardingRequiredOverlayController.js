define(["core/CoreAPI","core/Time","components/BlockedPageOnboardingRequiredOverlay/BlockedPageOnboardingRequiredOverlayView","components/BlockedPageOnboardingRequiredOverlay/BlockedPageOnboardingRequiredOverlayModel"],function(API,Time,View,Model){var log=API.Utils.createScopedLog("BlockedPageOnboardingRequiredOverlayController");return class{view=null;model=null;dismissTimeoutStorageKey="action-required-overlay-dismiss-timeout";constructor(){log("constructor","Constructing controller",null,"DEBUG"),this.model=new Model,this.view=new View}async init(){log("init","Initializing controller",null,"DEBUG"),await Promise.all([API.Settings.initAsync(),API.Requirements.init(),API.Analytics.init()]),this.addListener()}async mountView(){var dismissTimeout;log("mountView","Mounting view",null,"DEBUG"),this.model.hasBeenShown||API.Settings.get("isNewUser")||null!=(dismissTimeout=await API.Storage.getAsync(this.dismissTimeoutStorageKey))&&dismissTimeout>=Date.now()||await API.Requirements.isOnboardingCompleted()||(this.view.init(),this.model.hasBeenShown=!0)}addListener(){API.PubSub.listen("StayFocusd.timer.updated",()=>{this.mountView()}),window.addEventListener("message",async event=>{"BlockedPageOnboardingRequired.dismiss"===event.data&&(event=Date.now()+5*Time.MINUTE,await API.Storage.setAsync({[this.dismissTimeoutStorageKey]:event}),this.view.remove())})}}});