define(["core/Logger","core/vendor/jquery.min"],function(Logger,$){function log(funcName,message,payload,level){Logger.log("ReferrerMonitor."+funcName,message,payload,level)}return{init:function(){log("init","Initializing ReferrerMonitor",null,"DEBUG"),this.addListeners()},addListeners:function(){log("addListeners","Adding listeners",null,"DEBUG");var self=this;API.PubSub.listen({message:"*.outgoingLinks.bind",async:!0,handler:function(message,payload,callback){var response={success:self.bindOutgoingLinks()};"function"==typeof callback&&callback(response)}})},bindOutgoingLinks:function(){$("a[href]").each(function(){var href=$(this).attr("href");-1===href.indexOf("javascript:")&&"string"==typeof href&&1<href.length&&(log("bindOutgoingLinks","Binding outgoing link",href,"DEBUG"),$(this).click(function(){log("bindOutgoingLinks","Outgoing link clicked",href),API.PubSub.publish("ReferrerMonitor.outgoingLink.clicked",{outgoingLink:href})}))})},isBlockable:function(url,outgoingLink){return null!=url&&0!==url.length&&!(null==outgoingLink||outgoingLink.length<2)&&-1<url.indexOf(outgoingLink)}}});