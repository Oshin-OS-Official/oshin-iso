define(["core/Logger","core/vendor/st-panel-api-utils","core/vendor/ua-parser.min"],(Logger,PanelAPIUtils,UAParser)=>{let log=(funcName,message,payload,level)=>{Logger.log("Amplitude."+funcName,message,payload,level)},API;return{installIdKey:"install-id",initialized:null,installId:null,browser:null,os:null,version:null,sessionId:null,sampleGroup:null,enabled:null,initAPI(theAPI){(API=theAPI).mixin("Analytics",{init:this.init.bind(this),event:this.event.bind(this),bindHtmlEvents:this.bindHtmlEvents.bind(this)})},async init(){var resolve,promise;null!=this.initialized?log("init","Amplitude already initialized",{sessionId:this.sessionId},"DEBUG"):({promise,resolve}=API.Utils.getDecoupledPromise(),this.initialized=promise,promise=new UAParser(navigator.userAgent),this.sessionId=Date.now(),this.os=promise.getOS(),this.browser=promise.getBrowser(),this.version=API.Chrome.Extension.getVersion(),this.sampleGroup=await API.Storage.getOrSetAsync("analyticsSamplingGroup",100*Math.random()),promise=API.Settings.get("hasAcceptedPrivacyPolicy")??!0,this.enabled=promise&&!0,this.installId=await API.Storage.getAsync(this.installIdKey),this.installId||(this.installId=PanelAPIUtils.generateInstallId(),await API.Storage.setAsync({[this.installIdKey]:this.installId})),resolve(),log("init","Initialized Amplitude",this,"INFO"))},async event(eventType,eventProperties){var timestamp,amplitudeSampling,defaultSampling,enabled;this.initialized?(timestamp=Date.now(),await this.initialized,amplitudeSampling=API.RemoteConfig.get("amplitudeSampling"),defaultSampling=API.RemoteConfig.get("defaultAmplitudeSampling"),amplitudeSampling=amplitudeSampling[eventType]??defaultSampling,defaultSampling=this.sampleGroup<amplitudeSampling,enabled=this.enabled&&defaultSampling,eventType={event_type:eventType,user_id:this.installId,user_properties:{hasAcceptedToS:!!API.Settings.get("hasAcceptedToS"),hasAcceptedPrivacyPolicy:!!API.Settings.get("hasAcceptedPrivacyPolicy"),explicitlyDeclinedPrivacyPolicy:!!API.Settings.get("explicitlyDeclinedPrivacyPolicy"),isNewUser:!!API.Settings.get("isNewUser"),is18OrOlder:API.Settings.get("is18OrOlder"),age:API.Settings.get("age")},time:timestamp,event_properties:{page:location.protocol+"//"+location.hostname+location.pathname,...eventProperties},app_version:this.version,os_name:this.browser.name,os_version:this.browser.version,platform:this.os.name},log("event",enabled?"Reported event":"Skipped event",{event:eventType,samplePercentInt:amplitudeSampling,isSampled:defaultSampling,thisEnabled:this.enabled},"DEBUG"),enabled&&await API.AmplitudeAPI.uploadEvents(eventType)):log("event","Cannot report event until initialized",this,"WARN")},bindHtmlEvents(){log("bindHtmlEvents","Binding amplitude events to DOM",void 0,"DEBUG");document.querySelectorAll("*[data-analytics-click]").forEach(element=>{element.addEventListener("click",event=>{event=event.target?.getAttribute?.("data-analytics-click");event&&this.event(event)})});document.querySelectorAll("*[data-analytics-toggle]").forEach(element=>{element.addEventListener("change",event=>{var checked=event.target?.checked,event=event.target?.getAttribute?.("data-analytics-toggle");event&&this.event(event,{checked:checked})})})}}});