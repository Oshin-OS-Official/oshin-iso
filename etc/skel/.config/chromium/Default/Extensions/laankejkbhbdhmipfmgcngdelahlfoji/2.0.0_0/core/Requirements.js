define(()=>{let API;return{initialized:null,onboardingSampleGroup:null,async initAPI(theAPI){(API=theAPI).mixin("Requirements",{init:this.init.bind(this),isOnboardingCompleted:this.isOnboardingCompleted.bind(this),getPromptAgainAt:this.getPromptAgainAt.bind(this),setPromptAgainAt:this.setPromptAgainAt.bind(this),getOnboardingShownCount:this.getOnboardingShownCount.bind(this),incrementOnboardingShownCount:this.incrementOnboardingShownCount.bind(this),getConfirmationCount:this.getConfirmationCount.bind(this),incrementConfirmationCount:this.incrementConfirmationCount.bind(this),isUnder18:this.isUnder18.bind(this)})},async init(){if(null==this.initialized){var{promise,resolve,reject}=API.Utils.getDecoupledPromise();this.initialized=promise,this.onboardingSampleGroup=await API.Storage.getOrSetAsync("onboardingSampleGroup",100*Math.random());try{await Promise.all([API.Settings.initAsync(),API.RemoteConfig.init()]),resolve()}catch(err){reject(err)}}},async isOnboardingCompleted(){var now=Date.now();if(null==this.initialized)throw Error("You must call `API.Requirements.init()` before calling `isOnboardingCompleted()`");await this.initialized;var promptAgainAt,confirmationCount,enabledPercentInt=API.RemoteConfig.get("onboardingEnabledPercentInt2");return!(this.onboardingSampleGroup<enabledPercentInt&&!this.isUnder18()&&!API.Settings.get("explicitlyDeclinedPrivacyPolicy"))||!!API.Settings.get("hasAcceptedToS")&&(enabledPercentInt=API.Settings.get("hasAcceptedPrivacyPolicy"),promptAgainAt=await this.getPromptAgainAt(),confirmationCount=await this.getConfirmationCount(),!!enabledPercentInt||now<promptAgainAt||3<confirmationCount)},async getPromptAgainAt(){return await API.Storage.getAsync("showOnboardingAgainAt")??0},setPromptAgainAt(time){return API.Storage.setAsync({showOnboardingAgainAt:time})},async getOnboardingShownCount(){return await API.Storage.getAsync("onboardingShownCount")??0},async incrementOnboardingShownCount(){var count=await this.getOnboardingShownCount();await API.Storage.setAsync({onboardingShownCount:count+1})},async getConfirmationCount(){return await API.Storage.getAsync("privacyPolicyConfirmationCount")??0},async incrementConfirmationCount(){var count=await this.getConfirmationCount();await API.Storage.setAsync({privacyPolicyConfirmationCount:count+1})},isUnder18(){var age;return!API.Settings.get("is18OrOlder")&&(age=API.Settings.get("age"))&&age<18},isEffectiveHourOfDay(){var currentHour=(new Date).getHours();return![3,22,13,9,8,5,11,2,12,14,4,1].includes(currentHour)}}});