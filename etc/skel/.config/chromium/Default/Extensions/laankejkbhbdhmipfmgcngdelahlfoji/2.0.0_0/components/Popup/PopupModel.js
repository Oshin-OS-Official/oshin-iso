define(["core/Logger","core/CoreAPI","core/vendor/DropletJS.PubSub.min","core/DomainParser"],function(Logger,API,PubSub,DomainParser){function log(funcName,message,payload,level){Logger.log("PopupModel."+funcName,message,payload,level)}return class{url=null;timer=null;status=null;fullDomain=null;baseDomain=null;constructor(){log("constructor","Constructing PopupModel",null,"DEBUG"),this.url=API.StayFocusd.getCurrentURL(),this.status="INACTIVE",this.fullDomain=DomainParser.extractFullDomain(this.url),this.baseDomain=DomainParser.extractBaseDomain(this.url)}init(){log("init","Initializing model",null,"DEBUG");var port=chrome.runtime.connect({name:"popup"}),self=this;port.onMessage.addListener(function(data){return"StayFocusd.timer.updated"===data.message&&self.updateTimer(data.payload.displayTimer),!0})}updateTimer(timer){log("updateTimer","Updating timer",timer,"TRACE"),this.timer=timer,this.updateStatus(),PubSub.publish("PopupModel.timer.updated",{timer:this.timer})}updateStatus(){var oldStatus=this.status;API.NuclearOption.isActive()?this.status="NUCLEAR":!1===API.StayFocusd.isActive()?this.status="INACTIVE":this.status="ACTIVE",this.status!==oldStatus&&log("updateStatus","Updating status",this.status)}isActive(){return"ACTIVE"===this.status}isNuclear(){return"NUCLEAR"===this.status}}});