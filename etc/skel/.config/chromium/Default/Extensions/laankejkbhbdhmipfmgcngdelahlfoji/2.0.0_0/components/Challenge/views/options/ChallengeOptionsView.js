define(["core/Logger","core/CoreAPI","core/vendor/jquery.min","core/vendor/Brightline.min","core/vendor/text!components/Challenge/views/options/options.tpl","components/Challenge/ChallengeView"],function(Logger,API,$,Brightline,optionsTpl,ChallengeView){function log(originator,funcName,message,payload,level){Logger.log(originator+"."+funcName,message,payload,level)}return class extends ChallengeView{setJQuery(jQuery){log(this.originator,"setJQuery","Setting jQuery"),$=jQuery||$}inject($container){super.inject($container,this.render(optionsTpl))}render(tpl){log(this.originator,"render","Rendering view");tpl=new Brightline(tpl=tpl||"");return this.model.isRequired()&&tpl.set("checked",'checked="checked"'),tpl.set("customChallenge",this.model.getText()),tpl.set("minChallengeTextLength",this.model.minLength),tpl.render()}bindUIHandlers(){log(this.originator,"bindUIHandlers","Binding UI handlers",null,"TRACE");var self=this,$customChallenge=$("#customChallenge");$("input[name=setCustomChallenge]").click(function(){self.model.setText($customChallenge.val())}),$("#resetCustomChallenge").click(function(){self.model.resetText(),$customChallenge.val(self.model.getText(!0))}),$("#requireChallengeCheckbox").click(function(){self.setChallengeRequired($(this))})}setChallengeRequired(checkbox){log(this.originator,"setChallengeRequired","Setting challenge required",checkbox.prop("checked")?"ON":"OFF"),checkbox.prop("checked")?confirm(API.Chrome.Translation.get("confirmRequireChallenge"))?this.model.setRequired(!0):checkbox.prop("checked",!1):this.model.setRequired(!1)}}});