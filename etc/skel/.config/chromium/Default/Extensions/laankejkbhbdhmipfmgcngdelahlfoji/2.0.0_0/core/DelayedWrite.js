define(["core/Logger","core/CoreAPI"],function(Logger,API){function log(funcName,message,payload,level){Logger.log("DelayedWrite."+funcName,message,payload,level)}return class{key="";value=null;expiration=null;timer=null;done=!1;interval=60;constructor(key){this.key=this.stripDelayedWritePrefix(key)}add(value,delayNum,delayUnit){log("add","Adding value to write in "+delayNum+" "+delayUnit,value,"TRACE");delayNum=API.Date.timeUnitToMilliseconds(delayNum,delayUnit),delayUnit=(new Date).getTime();this.expiration=delayUnit+delayNum,this.value=value,this.save()}save(){log("save",'Saving DelayedWrite for "'+this.key+'"',null,"TRACE");var obj={};obj[this.getDelayedWriteKey()]=JSON.stringify(this),API.Storage.set(obj)}load(){log("load",'Loading DelayedWrite for "'+this.key+'"',null,"TRACE");var key=this.getDelayedWriteKey(),key=API.Storage.get(key),key=JSON.parse(key);this.revive(key)}check(){!this.done&&this.isExpired()&&(log("check","DelayedWrite is expired",null,"TRACE"),this.write())}write(){log("write",'Writing value for "'+this.key+'"',null,"TRACE");var obj={};obj[this.key]=JSON.stringify(this.value),API.Storage.set(obj),API.Storage.remove(this.getDelayedWriteKey()),this.done=!0}isExpired(){var nowTime=(new Date).getTime();return null!==this.expiration&&nowTime>this.expiration}getDelayedWriteKey(){return this.getDelayedWriteKeyPrefix()+this.key}getDelayedWriteKeyPrefix(){return"dw_"}stripDelayedWritePrefix(key){return 0===key.indexOf(this.getDelayedWriteKeyPrefix())?key.substr(this.getDelayedWriteKeyPrefix().length):key}toJSON(){return{key:this.key,value:this.value,expiration:this.expiration,done:this.done}}}});