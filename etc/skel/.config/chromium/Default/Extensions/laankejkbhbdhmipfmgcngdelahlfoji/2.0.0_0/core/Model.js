define(["core/Logger","core/CoreAPI"],function(Logger,API){function log(originator,funcName,message,payload,level){Logger.log(originator+"."+funcName,message,payload,level)}return class{id=null;load(id,callback){log(this.originator,"load","Loading model",id);var self=this,key=this.getStorageKey(id);this.id=id,API.Storage.get(key,function(data){self.hydrate(data),"function"==typeof callback&&callback(self)})}save(storageBucket,callback){if(!this.id)throw new Error("["+this.originator+".save()] Model must have an id before being saved");log(this.originator,"save","Saving model");var data={};data[this.getStorageKey()]=this.dehydrate(),API.Storage.set(data,callback,storageBucket)}update(data){for(var prop in log(this.originator,"update","Updating model",data),data)data.hasOwnProperty(prop)&&(this[prop]=data[prop])}getStorageKey(id){return id=id||this.id,this.className+"_"+id}dehydrate(){var prop,data={};for(prop in this)this.hasOwnProperty(prop)&&"function"!=typeof this[prop]&&(data[prop]=this[prop]);return data}hydrate(data){this.update(data)}}});