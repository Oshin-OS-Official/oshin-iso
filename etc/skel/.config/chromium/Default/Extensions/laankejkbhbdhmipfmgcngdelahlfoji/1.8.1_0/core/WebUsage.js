define(["core/Logger","core/vendor/web-ext-usage","core/AppConsts","core/vendor/st-panel-api-utils","core/vendor/ad-finder"],(Logger,WebExtUsage,AppConsts,PanelAPIUtils,AdFinder)=>{let log,API;return{initialized:null,usageDatabase:null,initAPI(theAPI){(API=theAPI).mixin("WebUsage",{init:this.init.bind(this),getUsageDatabase:this.getUsageDatabase.bind(this)})},async init(){if(null!=this.initialized)log?.("init","WebUsage already initialized",{sessionId:this.sessionId},"DEBUG");else{const isEnabled=async()=>{return await API.Storage.getAsync("hasAcceptedToS",!0)??!1},installId=API.Storage.getAsync("install-id",!0);var{promise,resolve}=API.Utils.getDecoupledPromise();this.initialized=promise,this.usageDatabase=WebExtUsage.openIdbUsageDatabase({getInstallId:()=>installId}),WebExtUsage.initUsageSdkInBackground({db:this.usageDatabase,enabled:()=>isEnabled,isOnStartupAvailable:()=>!0,isTabActiveWhenPlayingAudio:()=>!0,logger:null}),resolve(),log?.("init","Initialized WebUsage",this,"INFO");const processAdFinderMessage=(await AdFinder.initAdFinderInBackground({isEnabled:()=>isEnabled,getInstallId:()=>installId,getBirthYear:()=>{},extensionVersion:API.Chrome.Extension.getVersion(),extensionId:AppConsts.APP_ID,crawlUploadUrl:"https://api-pm.stayfocusd.st-panel-api.com/Ajax0001/IPD",pmExternalConfigUrl:"https://api-pm.stayfocusd.st-panel-api.com/Ajax0001/Config",basicDisplayAdsUploadUrl:"https://stayfocusd.st-panel-api.com/v1/desktop/ads/upload",panelPartnerId:33}))["processAdFinderMessage"];chrome.runtime.onConnect.addListener(port=>{"ad-finder"==port.name&&port.onMessage.addListener(async msg=>{var response;if("forward-message.request"==msg.message&&(response=await processAdFinderMessage(msg.payload),port.postMessage({message:"forward-message.response",payload:response})),"ad-found"==msg.message){const hostname=new PanelAPIUtils.parseUrl(msg.payload.hostname);hostname&&(response=msg.payload.ad,msg=(await this.usageDatabase.sessionsRepo?.getActiveSessions())?.find(session=>session.appId===hostname.hostname))&&await this.usageDatabase.adsRepo?.upsertAd({...response,sessionId:msg.id})}})})}},async getUsageDatabase(){if(await this.initialized,null==this.usageDatabase)throw Error("WebUsage not initialized");return this.usageDatabase}}});