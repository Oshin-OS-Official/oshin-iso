define(["core/Logger","core/CoreAPI"],function(Logger,API){return class{name=null;Model=null;View=null;Controller=null;Collection=null;constructor(name,initObj){this.name=name,this.Model=this.decorateClass(initObj.Model),this.View=this.decorateClass(initObj.View),this.Controller=this.decorateClass(initObj.Controller),this.Collection=this.decorateClass(initObj.Collection)}create(classType,instanceName){if(!classType in{Model:null,View:null,Controller:null,Collection:null})throw new Error("[Component.create] "+classType+" is not a valid class type");if(this[classType])return this.decorateInstance(new this[classType],classType,instanceName);throw new Error("[Component.create] The "+this.name+" Component does not support the "+classType+"class")}decorateClass(classObj){var self;return(classObj=classObj||null)&&(classObj.prototype.component=self=this,classObj.prototype.getComponent=function(){return self},classObj.prototype.getComponentName=function(){return this.__meta.componentName},classObj.prototype.getClassName=function(){return this.__meta.className},classObj.prototype.getInstanceName=function(){return this.__meta.instanceName},classObj.prototype.getInstanceID=function(){return this.__meta.instanceID},classObj.prototype.getOriginator=function(){return this.__meta.originator}),classObj}decorateInstance(instance,classType,instanceName){var className=this.name+classType;return instance.__meta={componentName:this.name,className:className,instanceName:instanceName,instanceID:className+":"+instanceName,originator:instanceName+": "+this.name+classType},instance.originator=instanceName+": "+className,instance}}});