define(["core/Logger","core/CoreAPI","core/vendor/jquery.min","core/vendor/Brightline.min","core/vendor/text!components/Challenge/views/overlay/overlay.tpl","components/Challenge/ChallengeView"],function(Logger,API,$,Brightline,overlayTpl,ChallengeView){return class extends ChallengeView{setJQuery(jQuery){$=jQuery||$}inject($container){super.inject($container,this.render(overlayTpl));var self=this;API.PubSub.listen("ChallengeModel.text.set",function(message,payload){$("#challengeSource").html(self.model.getText())})}render(tpl){tpl=new Brightline(tpl=tpl||"");return tpl.set("text",this.model.getText()),tpl.render()}bindUIHandlers(){var self=this,$challengeText=$("#challengeText"),$close=$("a.close"),$productivityBypass=$("#productivityBypass");$close.click(this.onCloseClicked.bind(this)),$productivityBypass.click(self.model.setProductivityBypass.bind(self.model)),$challengeText.keydown(this.onKeyDown.bind(this)),$challengeText.keyup(function(e){self.onKeyUp(e,$(this).val())})}onCloseClicked(){API.Chrome.Tab.getSelected(null,function(tab){API.Chrome.Tab.remove(tab.id)})}onKeyDown(e){this.model.isIgnoredKey(e.keyCode)||this.model.updateKeyCounter()}onKeyUp(e,inputText){if(!this.model.isIgnoredKey(e.keyCode))return this.model.isRightLength(inputText)?this.model.isCorrect(inputText)?void(this.model.isComplete(inputText)&&($.modal.close(),this.resetChallenge())):(alert(API.Chrome.Translation.get("madeAMistake")),this.resetChallenge(),!1):(alert(API.Chrome.Translation.get("numberOfKeysDoesNotMatch")),this.resetChallenge(),!1)}resetChallenge(){var $challengeText=$("#challengeText");$challengeText.val(""),$challengeText.focus(),this.model.resetKeyCounter()}}});