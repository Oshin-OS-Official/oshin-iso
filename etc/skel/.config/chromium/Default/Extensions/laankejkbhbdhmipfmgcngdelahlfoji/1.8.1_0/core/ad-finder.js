requirejs.config({baseUrl:chrome.extension.getURL("/"),waitSeconds:60}),requirejs(["core/CoreAPI","core/vendor/ad-finder"],function(API,AdFinder){let currentTabUrl;const port=chrome.runtime.connect({name:"ad-finder"});API.PubSub.listen("StayFocusd.tab.selected.*",function(message,payload){currentTabUrl=payload.tab.url});(async()=>{await API.Storage.initAsync(),await API.RemoteConfig.init();var isEnabled=await API.IncrementalRollout.AdFinder.isEnabled();isEnabled&&AdFinder.initAdFinderInContentScript({getInstallId:()=>API.Storage.getAsync("install-id",!0),sendMessageToBackground:message=>(port.postMessage({message:"forward-message.request",payload:message}),new Promise(res=>{const listener=({message,payload})=>{"forward-message.response"===message&&(port.onMessage.removeListener(listener),res(payload))};port.onMessage.addListener(listener)})),logger:null,enablePathmaticsLogs:!1,mv3PathmaticsPath:void 0,onAdDetected:ad=>{if("basic-display"===ad.type){const{host,...adWithoutHost}=ad;port.postMessage({message:"ad-found",payload:{hostname:currentTabUrl,ad:adWithoutHost}})}else port.postMessage({message:"ad-found",payload:{hostname:currentTabUrl,ad:ad}})}})})()});