define(["core/Logger","core/Time"],(Logger,Time)=>{let log;var API;return{cache:{},initialized:!1,defaults:{onboardingEnabledPercentInt2:0,defaultAmplitudeSampling:.1,amplitudeSampling:{},newTabTimeout:3*Time.DAY,uploadWebUsage:!0,usageUploadBatchSize:500,pageViewHostnameAllowlist:[],incrementalRollout:{}},url:"https://stayfocusd.st-panel-api.com/v1/remote_config/stayfocusd",storageKey:"remote-config",initAPI(theAPI){(API=theAPI).mixin("RemoteConfig",{storageKey:this.storageKey,init:this.init.bind(this),get:this.get.bind(this),refresh:this.refresh.bind(this)})},async init(){this.initialized?log?.("init","RemoteConfig already initialized",this.cache,"DEBUG"):(log?.("init","Initializing RemoteConfig",this.defaults,"DEBUG"),this.initialized=!0,this.cache={...this.defaults},this.cache={...this.cache,...await API.Storage.getAsync(this.storageKey)},log?.("init","Initialized",this.cache,"DEBUG"))},async refresh(){log?.("refresh","Refreshing...",{currentConfig:this.cache},"DEBUG");try{var latestConfig=await fetch(this.url).then(res=>res.json());log?.("refresh","Fetched config",latestConfig,"DEBUG"),this.cache={...this.defaults,...latestConfig},await API.Storage.setAsync({[this.storageKey]:this.cache}),log?.("refresh","Saved config",this.cache,"DEBUG")}catch(err){log?.("refresh","Failed to fetch remote config",err,"WARN")}},get(key){if(this.inCache(key))return this.cache[key];throw new Error("[RemoteConfig.get()] "+key+" is not registered as a key in RemoteConfig.js")},inCache(key){return void 0!==this.cache[key]}}});