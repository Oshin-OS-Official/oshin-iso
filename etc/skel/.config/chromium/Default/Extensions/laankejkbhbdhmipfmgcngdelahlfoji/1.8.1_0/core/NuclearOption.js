define(["core/Logger","core/Notification"],function(Logger,Notification){var API;return{timer:null,interval:1,settings:{},initialized:!1,initAPI:function(theAPI){(API=theAPI).mixin("NuclearOption",{activate:this.activate.bind(this),isActive:this.isActive.bind(this),getBlockLength:this.getBlockLength.bind(this),getBlockType:this.getBlockType.bind(this),getContentType:this.getContentType.bind(this),getExpiration:this.getExpiration.bind(this),getFrequency:this.getFrequency.bind(this),getSecondsUntilActive:this.getSecondsUntilActive.bind(this),getSmartBomb:this.getSmartBomb.bind(this),getStartAmPm:this.getStartAmPm.bind(this),getStartHour:this.getStartHour.bind(this),getStartMin:this.getStartMin.bind(this),getStartType:this.getStartType.bind(this),saveSettings:this.saveSettings.bind(this),updateActiveDays:this.updateActiveDays.bind(this)})},init:function(callback){this.loadSettings(),this.timer=setInterval(this.tick.bind(this),1e3*this.interval),this.initialized=!0,"function"==typeof callback&&callback()},initAsync(){return new Promise(resolve=>this.init(resolve))},saveSettings:function(settings){(this.settings=settings).activeDays=this.calculateActiveDays(settings),API.Settings.set({nuclearOptionSettings:settings}),clearInterval(this.timer),this.timer=setInterval(this.tick.bind(this),1e3*this.interval)},calculateActiveDays:function(settings){var activeDays=[];return"activeDays"===settings.frequency?activeDays=API.StayFocusd.getActiveDays(!0):void 0!==settings.frequency&&(activeDays[0]="everyDay"===settings.frequency,activeDays[1]=-1<settings.frequency.indexOf("every"),activeDays[2]=-1<settings.frequency.indexOf("every"),activeDays[3]=-1<settings.frequency.indexOf("every"),activeDays[4]=-1<settings.frequency.indexOf("every"),activeDays[5]=-1<settings.frequency.indexOf("every"),activeDays[6]="everyDay"===settings.frequency),activeDays},updateActiveDays:function(activeDays){var self=this;this.initialized||this.init(function(){self.updateActiveDays(activeDays)}),this.settings.activeDays=activeDays,this.saveSettings(this.settings)},loadSettings:function(){var nuclearOptionSettings=API.Settings.get("nuclearOptionSettings");nuclearOptionSettings&&(this.settings=nuclearOptionSettings)},isActive:function(){this.isCurrentlyActive()?this.isExpired()&&this.deactivate():this.isStarted()&&this.activate();var isActive=this.isCurrentlyActive();return isActive},isActiveToday:function(){var frequency=this.getFrequency(),lastActiveDate=this.getLastActiveDate(),lastExpiredDate=this.getLastExpiredDate(),todayDate=(new Date).toDateString();return"todayOnly"===frequency&&(lastActiveDate===todayDate||null===lastActiveDate)&&lastExpiredDate!==todayDate||(frequency=(new Date).getDay(),0!==(lastActiveDate=this.getActiveDays()).length&&lastActiveDate[frequency])},isStarted:function(){var startType=this.getStartType(),lastActiveDate=this.getLastActiveDate(),lastExpiredDate=this.getLastExpiredDate(),todayDate=(new Date).toDateString();if(!this.isActiveToday()||lastExpiredDate===todayDate){if("atScheduledTime"!==startType)return!1;if(new Date(todayDate+" "+this.getStartHour()+":"+this.getStartMin()+" "+this.getStartAmPm())<new Date(this.getExpiration()))return!1}return"now"===startType?lastActiveDate===todayDate:this.isActiveToday()?"atScheduledTime"===startType?API.Date.hasTimePassed(this.getStartHour(),this.getStartMin(),this.getStartAmPm()):"whenMaxTimeAllowedExceeded"===startType?API.StayFocusd.isMaxTimeAllowedExceeded():void 0:void 0},activate:function(){API.Analytics.event("TOGGLE_NUCLEAR_OPTION",{enabled:!0});var startDate=this.hasScheduledTime()?API.Date.getTodayDateObj(this.getStartHour(),this.getStartMin(),this.getStartAmPm()):new Date;this.settings.expiration=startDate.getTime()+API.Date.hoursToMilliseconds(this.getBlockLength()),this.settings.lastActiveDate=(new Date).toDateString(),this.settings.lastExpiredDate=null,this.settings.isCurrentlyActive=!0,this.saveSettings(this.settings),clearInterval(this.timer)},deactivate:function(){API.Analytics.event("TOGGLE_NUCLEAR_OPTION",{enabled:!1}),this.settings.lastExpiredDate=(new Date).toDateString(),this.settings.isCurrentlyActive=!1,this.saveSettings(this.settings)},isExpired:function(){var nowDate;return null===this.getExpiration()||(nowDate=new Date,new Date(this.getExpiration())<nowDate)},isBlockable:function(isBlacklisted,isWhitelisted){if(!1===this.isActive())return!1;switch(this.getBlockType()){case"all":return!0;case"allExceptAllowed":return!isWhitelisted;case"blocked":return isBlacklisted&&!isWhitelisted;default:return!1}},hasScheduledTime:function(){return"atScheduledTime"===this.getStartType()},getSecondsUntilActive:function(){return API.Date.secondsUntilTime(this.getStartHour(),this.getStartMin(),this.getStartAmPm())},hasSmartBomb:function(){return"smartBomb"===this.getContentType()},isCurrentlyActive:function(){return void 0!==this.settings.isCurrentlyActive&&this.settings.isCurrentlyActive},getSmartBomb:function(){return void 0===this.settings.smartBomb?{}:this.settings.smartBomb},getContentType:function(){return void 0===this.settings.contentType?"wholeSite":this.settings.contentType},getExpiration:function(){return void 0===this.settings.expiration?null:parseInt(this.settings.expiration,10)},getLastActiveDate:function(expiration){return void 0===this.settings.lastActiveDate?null:this.settings.lastActiveDate},getLastExpiredDate:function(expiration){return void 0===this.settings.lastExpiredDate?null:this.settings.lastExpiredDate},getBlockType:function(){return void 0===this.settings.blockType?"all":this.settings.blockType},getBlockLength:function(){return void 0===this.settings.blockLength?1:parseFloat(this.settings.blockLength)},getStartType:function(){return void 0===this.settings.startType?"now":this.settings.startType},getStartHour:function(){return void 0===this.settings.startHour?"00":this.settings.startHour},getStartMin:function(){return void 0===this.settings.startMin?"00":this.settings.startMin},getStartAmPm:function(){return void 0===this.settings.startAmPm?"am":this.settings.startAmPm},getFrequency:function(){return void 0===this.settings.frequency?null:this.settings.frequency},getActiveDays:function(){return void 0===this.settings.activeDays?[]:this.settings.activeDays},tick:function(){var secondsUntilNuclear;return this.hasScheduledTime()&&!this.isActive()&&(secondsUntilNuclear=this.getSecondsUntilActive(),Notification.isset(secondsUntilNuclear))&&Notification.show("nuclear"),!0}}});