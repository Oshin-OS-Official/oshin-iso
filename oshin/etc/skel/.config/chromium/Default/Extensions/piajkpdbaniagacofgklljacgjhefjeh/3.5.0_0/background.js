(()=>{"use strict";function t(t){return t?n.TRUE:n.FALSE}function e(t){const e=t.toString().length;if(e<=3)return t.toString();if(e<=6){const e=(t/1e3).toPrecision(),s=e.indexOf(".");return(s>=-1&&s<=1?e.slice(0,3):e.slice(0,s))+"k"}if(e<=9){const e=(t/1e6).toPrecision(),s=e.indexOf(".");return(s>=-1&&s<=1?e.slice(0,3):e.slice(0,s))+"M"}return"1G+"}function s(t){const e=t.split(".");return{major:parseInt(e[0]),minor:parseInt(e[1]),patch:parseInt(e[2])}}function a(t,e){return t.major<e.major||t.major==e.major&&t.minor<e.minor||t.major==e.major&&t.minor==e.minor&&t.patch<e.patch}function r(t){return`[${t.toString().replace(/,/g,", ")}]`}function i(t,e){return"string"==typeof e?t.filter((t=>t!==e)):t.filter((t=>!e.includes(t)))}function o(t){return"string"==typeof t&&(t=[t]),t}class n{static ALL_WORDS_WORDLIST_ID=0;static BUILD_TARGET_BOOKMARKLET="bookmarklet";static BUILD_TARGET_CHROME="chrome";static BUILD_TARGET_FIREFOX="firefox";static DOMAIN_MODES={NORMAL:0,ADVANCED:1,DEEP:2};static FALSE=0;static FILTER_METHODS={CENSOR:0,SUBSTITUTE:1,REMOVE:2,OFF:3};static LOGGING_LEVELS={DEBUG:0,INFO:1,WARN:2,ERROR:3};static MATCH_METHODS={EXACT:0,PARTIAL:1,WHOLE:2,REGEX:3};static MESSAGING={BACKGROUND:"background",CONTEXT:"context",OPTION:"option",POPUP:"popup"};static STATS_TYPE_TEXT="text";static STATUS={DISABLED:0,NORMAL:1,ADVANCED:2,DEEP:3};static TAB_DISABLE_ONCE={NOT_SET:0,DISABLED:1,WILL_DISABLE:2};static TOP_WINDOW_FRAME_ID=0;static TRUE=1;static filterMethodName(t){return this.nameById(this.FILTER_METHODS,t)}static loggingLevelName(t){return this.nameByValue(this.LOGGING_LEVELS,t)}static matchMethodName(t){return this.nameById(this.MATCH_METHODS,t)}static nameById(t,e){return function(t,e=!0){let s=t.charAt(0).toUpperCase();return s+=e?t.toLowerCase().slice(1):t.slice(1),s}(Object.entries(t).filter((t=>t[1]===e))[0][0])}static nameByValue(t,e){return Object.keys(t).find((s=>t[s]==e))}static orderedArray(t){const e=[];return Object.values(t).sort().forEach((s=>{e.push(n.nameById(t,s))})),e}}class c{censorCharacter;censorFixedLength;defaultSubstitution;defaultWordMatchMethod;defaultWordRepeat;defaultWordSeparators;filterMethod;filterWordList;iWordAllowlist;loggingLevel;preserveCase;preserveFirst;preserveLast;showCounter;showSummary;substitutionMark;wordAllowlist;wordlistId;wordlists;wordlistsEnabled;words;wordSubSeparator;static initializeDefaults(...t){return Object.assign({},this._configDefaults,...t)}static _allWordlists=["All words"];static _configDefaults={censorCharacter:"*",censorFixedLength:0,defaultSubstitution:"censored",defaultWordMatchMethod:n.MATCH_METHODS.EXACT,defaultWordRepeat:n.FALSE,defaultWordSeparators:n.FALSE,filterMethod:n.FILTER_METHODS.SUBSTITUTE,filterWordList:!0,iWordAllowlist:[],loggingLevel:n.LOGGING_LEVELS.WARN,preserveCase:!0,preserveFirst:!0,preserveLast:!1,showCounter:!0,showSummary:!0,substitutionMark:!1,wordAllowlist:[],wordlistId:0,wordlists:["Wordlist 1","Wordlist 2","Wordlist 3","Wordlist 4","Wordlist 5","Wordlist 6"],wordlistsEnabled:!0,words:void 0,wordSubSeparator:";;"};static _defaultWords={ass:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"butt"},asses:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.FALSE,separators:n.FALSE,sub:"butts"},asshole:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"jerk"},badass:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.TRUE,sub:"cool"},bastard:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"idiot"},bitch:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"bench"},cocksucker:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.TRUE,sub:"suckup"},cunt:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"expletive"},dammit:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.FALSE,separators:n.TRUE,sub:"dangit"},damn:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.FALSE,separators:n.FALSE,sub:"dang"},dumbass:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"idiot"},fag:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"gay"},faggot:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"gay"},fags:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"gays"},fuck:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.TRUE,sub:"freak"},goddammit:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.TRUE,sub:"dangit"},hell:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.FALSE,separators:n.FALSE,sub:"heck"},jackass:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.TRUE,sub:"jerk"},nigga:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"bruh"},nigger:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"man"},niggers:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"people"},piss:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"pee"},pissed:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"ticked"},pussies:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"softies"},pussy:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"softie"},shit:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"crap"},slut:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"tramp"},tits:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"chest"},twat:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"dumbo"},twats:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"dumbos"},whore:{lists:[],matchMethod:n.MATCH_METHODS.PARTIAL,repeat:n.TRUE,separators:n.FALSE,sub:"tramp"},wtf:{lists:[],matchMethod:n.MATCH_METHODS.EXACT,repeat:n.TRUE,separators:n.FALSE,sub:"what"}};static _defaults=this.initializeDefaults(this._configDefaults);static _persistableKeys=Object.keys(this._defaults);constructor(t={}){Object.assign(this,c._defaults,t)}get _persistableKeys(){return this.constructor._persistableKeys}addWord(t,e=this.defaultWordOptions()){return t=t.trim(),(e=Object.assign({},this.defaultWordOptions(),e)).matchMethod!==n.MATCH_METHODS.REGEX&&(t=t.toLowerCase()),!Object.keys(this.words).includes(t)&&(e.sub=e.case==n.TRUE?e.sub.trim():e.sub.trim().toLowerCase(),this.words[t]=e,!0)}defaultWordOptions(){return{lists:[],matchMethod:this.defaultWordMatchMethod,repeat:this.defaultWordRepeat,separators:this.defaultWordSeparators,sub:""}}removeWord(t){const e=(t=t.trim()).toLowerCase();return Object.keys(this.words).includes(e)?(delete this.words[e],!0):!!this.words[t]&&(delete this.words[t],!0)}repeatForWord(t){return this.words[t].repeat===n.TRUE||this.words[t].repeat===n.FALSE?this.words[t].repeat:this.defaultWordRepeat}sanitizeWords(){const t={};Object.keys(this.words).sort().forEach((e=>{t[e.trim().toLowerCase()]=this.words[e]})),this.words=t}}class l{level;prefix;static app="APF";static debugLevel=n.LOGGING_LEVELS.DEBUG;static debugName=n.loggingLevelName(this.debugLevel).toLowerCase();static defaultLevel=n.LOGGING_LEVELS.WARN;static errorLevel=n.LOGGING_LEVELS.ERROR;static errorName=n.loggingLevelName(this.errorLevel).toLowerCase();static infoLevel=n.LOGGING_LEVELS.INFO;static infoName=n.loggingLevelName(this.infoLevel).toLowerCase();static warnLevel=n.LOGGING_LEVELS.WARN;static warnName=n.loggingLevelName(this.warnLevel).toLowerCase();static debug(t,...e){this.log(this.debugName,t,e)}static debugTime(t,e=[]){this.logTime(this.debugName,t,e)}static error(t,...e){this.log(this.errorName,t,e)}static errorTime(t,e=[]){this.logTime(this.errorName,t,e)}static info(t,...e){this.log(this.infoName,t,e)}static infoTime(t,e=[]){this.logTime(this.infoName,t,e)}static log(t,e,s=[]){e=`[${l.app}] ${e}`,s.length?console[t](e,s):console[t](e)}static logTime(t,e,s=[]){const a=new Date,r=a.toLocaleTimeString().replace(" ",`.${a.getMilliseconds().toString()} `);e=`[${l.app}] ${e}`,s.length?console[t](e,r,s):console[t](e,r)}static warn(t,...e){this.log(this.warnName,t,e)}static warnTime(t,e=[]){this.logTime(this.warnName,t,e)}constructor(t){this.level=l.defaultLevel,this.prefix="",t&&(this.prefix=`[${t}] `)}debug(t,...e){l.debugLevel>=this.level&&l.log(l.debugName,`${this.prefix}${t}`,e)}debugTime(t,...e){l.debugLevel>=this.level&&l.logTime(l.debugName,`${this.prefix}${t}`,e)}error(t,...e){l.errorLevel>=this.level&&l.log(l.errorName,`${this.prefix}${t}`,e)}errorTime(t,...e){l.errorLevel>=this.level&&l.logTime(l.errorName,`${this.prefix}${t}`,e)}info(t,...e){l.infoLevel>=this.level&&l.log(l.infoName,`${this.prefix}${t}`,e)}infoTime(t,...e){l.infoLevel>=this.level&&l.logTime(l.infoName,`${this.prefix}${t}`,e)}setLevel(t){this.level=t}warn(t,...e){l.warnLevel>=this.level&&l.log(l.warnName,`${this.prefix}${t}`,e)}warnTime(t,...e){l.warnLevel>=this.level&&l.logTime(l.warnName,`${this.prefix}${t}`,e)}}const d={config:{},manifestVersion:3,release:!0,target:"chrome",version:"1.0.0"},h=new l("WebConfig");class u extends c{_lastSplitKeys;collectStats;contextMenu;darkMode;domains;enabledDomainsOnly;enabledFramesOnly;password;showUpdateNotification;syncLargeKeys;get Class(){return this.constructor}static BUILD=void 0==={config:{},manifestVersion:3,release:!0,target:"chrome",version:"3.5.0"}?d:{config:{},manifestVersion:3,release:!0,target:"chrome",version:"3.5.0"};static _webDefaults={collectStats:!0,contextMenu:!0,darkMode:null,domains:{},enabledDomainsOnly:!1,enabledFramesOnly:!1,password:null,showUpdateNotification:!1,syncLargeKeys:!0};static _defaults=this.initializeDefaults({},this._configDefaults,this._webDefaults);static _persistableKeys=Object.keys(this._defaults);static _localConfigKeys=["domains","syncLargeKeys","words"];static _localOnlyKeys=["background","stats"];static _maxSplitKeys=64;static _largeKeys=["domains","words"];static get _maxBytes(){try{if(chrome.storage.sync.QUOTA_BYTES_PER_ITEM)return Math.round(.98*chrome.storage.sync.QUOTA_BYTES_PER_ITEM);throw"QUOTA_BYTES_PER_ITEM not defined, using default"}catch(t){return 8028}}static assignDefaultValue(t,e){e[t]="words"===t?this._defaultWords:this._defaults[t]}static chromeStorageAvailable(){return!!("object"==typeof chrome&&chrome.storage&&chrome.storage.sync&&chrome.storage.local)}static combineData(t,e){if(t[e]={},void 0!==t[`_${e}0`]){const s=this.getDataContainerKeys(t,e);return s.forEach((s=>{Object.assign(t[e],t[s]),delete t[s]})),s}}static getDataContainerKeys(t,e){const s=new RegExp(`^_${e}\\d+`);return Object.keys(t).filter((t=>s.test(t))).sort()}static getLocalStorage(t){return"string"==typeof t&&(t=[t]),new Promise(((e,s)=>{chrome.storage.local.get(t,(t=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(t)}))}))}static getMaxSplitKeyFromArray(t=[]){if(Array.isArray(t)){const e=t.sort()[t.length-1];if(e){const t=new RegExp("\\d+$"),s=e.match(t);if(s)return parseInt(s[0])}}}static getMaxSplitKeyFromData(t,e){const s=this.getDataContainerKeys(t,e);return this.getMaxSplitKeyFromArray(s)}static getSyncStorage(t){return"string"==typeof t&&(t=[t]),new Promise(((e,s)=>{chrome.storage.sync.get(t,(t=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(t)}))}))}static includesLargeKeys(t){return t.some((t=>this._largeKeys.includes(t)))}static keysToLoad(t=[]){return 0===(t=o(t)).length&&(t=t.concat(this._persistableKeys)),t}keysToSave(t=[]){return 0===(t=o(t)).length&&(t=t.concat(this._persistableKeys)),t}static async load(t=[],e={}){let s;t=this.keysToLoad(t);try{return s=this.includesLargeKeys(t)?await this.loadLargeKeysFromLocalStorage(t,e):this.requestedkeysForSyncStorage(t,"syncLargeKeys",e),await this.loadFromSyncStorage(s,e),new this(e)}catch(e){throw h.error("Failed to load items.",t,e),new Error(`Failed to load items: ${r(t)}. [${e.message}]`)}}static async loadLargeKeysFromLocalStorage(t,e){t.includes("syncLargeKeys")||t.push("syncLargeKeys");const s=this.requestedkeysForLocalStorage(t,e),a=await this.getLocalStorage(s);if(e.syncLargeKeys=!1===a.syncLargeKeys?a.syncLargeKeys:this._defaults.syncLargeKeys,!1===e.syncLargeKeys){for(const t of s)a.hasOwnProperty(t)?e[t]=a[t]:this.assignDefaultValue(t,e);return this.requestedkeysForSyncStorage(t,this._localConfigKeys,e)}return this.requestedkeysForSyncStorage(t,"syncLargeKeys",e)}static async loadFromSyncStorage(t,e={}){if(!t.length)return;let s=[].concat(t);this._largeKeys.forEach((e=>{t.includes(e)&&(s.splice(s.indexOf(e),1),s=s.concat(this.splitKeyNames(e)))}));const a=await this.getSyncStorage(s);e._lastSplitKeys={},t.forEach((t=>{if(this._largeKeys.includes(t)){const s=this.combineData(a,t);s?(e._lastSplitKeys[t]=this.getMaxSplitKeyFromArray(s),e[t]=a[t]):this.assignDefaultValue(t,e)}else void 0===a[t]?this.assignDefaultValue(t,e):e[t]=a[t]}))}static removeLocalStorage(t){return t=o(t),new Promise(((e,s)=>{chrome.storage.local.remove(t,(()=>{t.length||e(0),chrome.runtime.lastError?s(chrome.runtime.lastError):e(0)}))}))}static removeSyncStorage(t){return t=o(t),new Promise(((e,s)=>{t.length||e(0),chrome.storage.sync.remove(t,(()=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(0)}))}))}static requestedkeysForLocalStorage(t,e){return this._localConfigKeys.filter((e=>t.includes(e)))}static requestedkeysForSyncStorage(t,e,s){return i(t,e)}static resetLocalStorage(){return new Promise(((t,e)=>{chrome.storage.local.clear((()=>{chrome.runtime.lastError?e(chrome.runtime.lastError):t(0)}))}))}static resetSyncStorage(){return new Promise(((t,e)=>{chrome.storage.sync.clear((()=>{chrome.runtime.lastError?e(chrome.runtime.lastError):t(0)}))}))}static saveLocalStorage(t){return new Promise(((e,s)=>{chrome.storage.local.set(t,(()=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(0)}))}))}static saveSyncStorage(t){return new Promise(((e,s)=>{chrome.storage.sync.set(t,(()=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(0)}))}))}static splitKeyNames(t,e=0){return Array(this._maxSplitKeys-e).fill(1).map(((s,a)=>"_"+t+(a+e)))}constructor(t){if(void 0===t)throw new Error("Cannot be called directly, call load() instead.");super(t),Object.assign(this,this.Class._webDefaults,t)}ordered(){return function(t,e=!0){return Object.keys(t).sort().reduce(((s,a)=>(e&&"_"==a[0]||(s[a]=t[a]),s)),{})}(this)}async prepareLocalDataForSave(t){}async prepareSyncDataForSave(t){}async remove(t){t=o(t);let e=[];const s=[];if(t.length>0){t.forEach((t=>{"syncLargeKeys"==t?s.push(t):this.Class._largeKeys.includes(t)?this.syncLargeKeys?e=e.concat(this.Class.splitKeyNames(t)):s.push(t):e.push(t)}));try{e.length&&await this.Class.removeSyncStorage(e),s.length&&await this.Class.removeLocalStorage(s),t.forEach((t=>{delete this[t]}))}catch(e){throw h.error("Failed to remove items.",t,e),new Error(`Failed to remove items: ${r(t)}. ${e.message}`)}}}async reset(){try{await this.Class.resetSyncStorage(),await this.Class.resetLocalStorage()}catch(t){throw h.error("Failed to clear storage.",t),new Error(`Failed to clear storage. ${t.message}`)}}async resetPreserveStats(){try{await this.Class.resetSyncStorage(),await this.Class.removeLocalStorage(this.Class._localConfigKeys)}catch(t){throw h.error("Failed to clear storage.",t),new Error(`Failed to clear storage. ${t.message}`)}}async save(t=[]){t=this.keysToSave(t);const e={},s={};let a=[];t.forEach((t=>{if("syncLargeKeys"==t)s[t]=this[t];else if(this.Class._largeKeys.includes(t))if(this.syncLargeKeys){if(Object.assign(e,this.splitData(t)),this._lastSplitKeys){const s=this.Class.getMaxSplitKeyFromData(e,t);this._lastSplitKeys[t]>s?a=a.concat(this.Class.splitKeyNames(t,s+1)):this._lastSplitKeys[t]<s&&(this._lastSplitKeys[t]=s)}}else s[t]=this[t];else e[t]=this[t]}));try{await this.prepareLocalDataForSave(s),await this.prepareSyncDataForSave(e),Object.keys(e).length&&await this.Class.saveSyncStorage(e),Object.keys(s).length&&await this.Class.saveLocalStorage(s),a.length&&await this.remove(a)}catch(e){throw h.error("Failed to save items.",t,e),new Error(`Failed to save items: ${r(t)}. [${e.message}]`)}}splitData(t){const e=new TextEncoder;let s=0,a=2;const r={};let i=`_${t}${s}`;return r[i]={},a+=e.encode(`{"${i}":{}}`).length,Object.keys(this[t]).sort().forEach((o=>{let n=e.encode(`",${o}":`).length;n+=e.encode(JSON.stringify(this[t][o])).length,a+n>=this.Class._maxBytes&&(s++,i=`_${t}${s}`,r[i]={},a=e.encode(`"${i}":{}`).length),a+=n,r[i][o]=this[t][o]})),r}}class g{cfg;static get Config(){return u}static get Constants(){return n}get Class(){return this.constructor}static _migrations=[{version:"1.0.13",name:"moveToNewWordsStorage",runOnImport:!1,async:!0},{version:"1.1.0",name:"sanitizeWords",runOnImport:!0},{version:"1.2.0",name:"singleWordSubstitution",runOnImport:!0},{version:"2.1.4",name:"updateDefaultSubs",runOnImport:!1},{version:"2.3.0",name:"fixSmartWatch",runOnImport:!1},{version:"2.7.0",name:"addWordlistsToWords",runOnImport:!0},{version:"2.7.0",name:"removeGlobalMatchMethod",runOnImport:!0},{version:"2.7.0",name:"removeOldDomainArrays",runOnImport:!0},{version:"2.22.0",name:"updateWordRepeatAndSeparatorDataTypes",runOnImport:!0},{version:"2.26.0",name:"changeShowUpdateNotificationDefaultToFalse",runOnImport:!1},{version:"2.40.0",name:"renameToWordAllowlist",runOnImport:!0,async:!0}];static migrations=this.compileMigrations();static async build(){return new this(this.loadCfg())}static compileMigrations(...t){return this._migrations.concat(...t).sort(this.sortByVersions)}static latestMigration(){return this.migrations[this.migrations.length-1]}static async loadCfg(){return await this.Config.load()}static migrationNeeded(t){return a(s(t),s(this.latestMigration().version))}static sortByVersions(t,e){return t.version==e.version?0:a(s(t.version),s(e.version))?-1:1}constructor(t){this.cfg=t}_renameConfigKeys(t,e,s){for(const a of e){const e=s[a];if(t[a]||(t[a]=this.Class.Config._defaults[e]),t[a].length){if(this.cfg[e].length)throw new Error(`'${a}' and '${e}' both exist. Please combine them manually into '${e}'.`);this.cfg[e]=t[a]}}}addWordlistsToWords(){const t=this.cfg;Object.keys(t.words).forEach((e=>{const s=t.words[e];Array.isArray(s.lists)||(s.lists=[])}))}async byVersion(t){const e=s(t);let r=!1;for(const t of this.constructor.migrations)a(e,s(t.version))&&(r=!0,t.async?await this[t.name]():this[t.name]());return r}fixSmartWatch(){const t=this.cfg,e="twat",s=this.Class.Constants.MATCH_METHODS.PARTIAL,a={twat:{matchMethod:this.Class.Constants.MATCH_METHODS.EXACT,repeat:!0,sub:"dumbo"},twats:{matchMethod:this.Class.Constants.MATCH_METHODS.EXACT,repeat:!0,sub:"dumbos"}};t.words[e]&&t.words[e].matchMethod==s&&"dumbo"==t.words[e].sub&&Object.keys(a).forEach((e=>{t.words[e]=a[e]}))}async moveToNewWordsStorage(){const t="words",e=await this.Class.Config.getSyncStorage(t);e.words&&(await this.Class.Config.saveSyncStorage({_words0:e.words}),await this.Class.Config.removeSyncStorage(t))}removeGlobalMatchMethod(){const t=this.cfg;void 0!==t.globalMatchMethod&&(Object.keys(t.words).forEach((e=>{const s=t.words[e];4===s.matchMethod&&(s.matchMethod=this.Class.Constants.MATCH_METHODS.REGEX)})),t.remove("globalMatchMethod"))}removeOldDomainArrays(){const t=this.cfg;t.domains||(t.domains={});const e={advancedDomains:"adv",disabledDomains:"disabled",enabledDomains:"enabled"};Object.keys(e).forEach((s=>{t[s]&&Array.isArray(t[s])&&t[s].length>0&&t[s].forEach((a=>{a&&(null==t.domains[a]&&(t.domains[a]={}),t.domains[a][e[s]]=!0)})),delete t[s]}))}async renameToWordAllowlist(){const t={iWordWhitelist:"iWordAllowlist",wordWhitelist:"wordAllowlist"},e=Object.keys(t);if(this.Class.Config.chromeStorageAvailable()){const s=await this.Class.Config.getSyncStorage(e);Object.keys(s).some((t=>e.includes(t)))&&(this._renameConfigKeys(s,e,t),await this.Class.Config.removeSyncStorage(e))}this._renameConfigKeys(this.cfg,e,t)}async runImportMigrations(){let t=!1;for(const e of this.constructor.migrations)e.runOnImport&&(t=!0,e.async?await this[e.name]():this[e.name]());return t}sanitizeWords(){this.cfg.sanitizeWords()}singleWordSubstitution(){const t=this.cfg;Object.keys(t.words).forEach((e=>{const s=t.words[e];s.hasOwnProperty("words")&&(s.sub=s.words[0]||"",delete s.words)}))}updateDefaultSubs(){const t=this.cfg,e={bastard:{original:"jerk",update:"idiot"},bitch:{original:"jerk",update:"bench"},cocksucker:{original:"idiot",update:"suckup"},cunt:{original:"explative",update:"expletive"},fag:{original:"slur",update:"gay"},faggot:{original:"slur",update:"gay"},fags:{original:"slur",update:"gays"},fuck:{original:"fudge",update:"freak"},goddammit:{original:"goshdangit",update:"dangit"},jackass:{original:"idiot",update:"jerk"},nigga:{original:"ethnic slur",update:"bruh"},nigger:{original:"ethnic slur",update:"man"},niggers:{original:"ethnic slurs",update:"people"},tits:{original:"explative",update:"chest"},twat:{original:"explative",update:"dumbo"}};Object.keys(e).forEach((s=>{if(t.words[s]){const a=t.words[s];a.sub==e[s].original&&(a.sub=e[s].update)}}))}updateWordRepeatAndSeparatorDataTypes(){const e=this.cfg;Object.keys(e.words).forEach((s=>{const a=e.words[s];!0===a.repeat||!1===a.repeat?a.repeat=t(a.repeat):null==a.repeat&&(a.repeat=e.defaultWordRepeat),!0===a.separators||!1===a.separators?a.separators=t(a.separators):null==a.separators&&(a.separators=e.defaultWordSeparators)}))}changeShowUpdateNotificationDefaultToFalse(){this.cfg.showUpdateNotification=this.Class.Config._defaults.showUpdateNotification}}class m{advanced;cfg;cfgKey;deep;disabled;enabled;framesOff;framesOn;hostname;tab;wordlistId;static get Constants(){return n}get Class(){return this.constructor}static _domainCfgDefaults={adv:void 0,deep:void 0,disabled:void 0,enabled:void 0,framesOff:void 0,framesOn:void 0,wordlist:void 0};static byHostname(t,e){const s=this.findDomainKey(t,e)||t,a=this.byKey(s,e);return a.hostname=t,a}static byKey(t,e){return new this(t,e[t])}static findDomainKey(t,e){return Object.keys(e).sort(((t,e)=>e.length-t.length)).find((e=>new RegExp(`(^|.)${e}$`).test(t)))}static getCurrentTab(){return new Promise(((t,e)=>{chrome.tabs.query({active:!0,currentWindow:!0},(e=>{t(e[0])}))}))}static sortedKeys(t){return Object.keys(t).sort(((t,e)=>{const s=this.sortingKey(t),a=this.sortingKey(e);return s==a?t<e?-1:t>e?1:0:s<a?-1:s>a?1:0}))}static sortingKey(t){const e=t.split(".");switch(e.length){case 1:case 2:return e[0];case 3:return e[1];case 4:return e[1].match(/^\d+$/)?t:e[3].length?e[1]:e[2];default:return e[2]}}constructor(t,e){this.cfgKey=t,this.cfg={},e?this.cfg=e:Object.assign(this.cfg,this.Class._domainCfgDefaults),this.updateFromCfg()}getModeIndex(){return this.advanced?this.Class.Constants.DOMAIN_MODES.ADVANCED:this.deep?this.Class.Constants.DOMAIN_MODES.DEEP:this.Class.Constants.DOMAIN_MODES.NORMAL}async save(t){if(t.domains)return this.updateCfg(),"{}"===JSON.stringify(this.cfg)?delete t.domains[this.cfgKey]:t.domains[this.cfgKey]=this.cfg,await t.save("domains")}updateCfg(){this.cfg.adv=!0===this.advanced||void 0,this.cfg.deep=!0===this.deep||void 0,this.cfg.disabled=!0===this.disabled||void 0,this.cfg.enabled=!0===this.enabled||void 0,this.cfg.framesOff=!0===this.framesOff||void 0,this.cfg.framesOn=!0===this.framesOn||void 0,this.cfg.wordlist=this.wordlistId>=0?this.wordlistId:void 0}updateFromCfg(){this.advanced=this.cfg.adv,this.deep=this.cfg.deep,this.disabled=this.cfg.disabled,this.enabled=this.cfg.enabled,this.framesOff=this.cfg.framesOff,this.framesOn=this.cfg.framesOn,this.wordlistId=this.cfg.wordlist}updateFromModeIndex(t){switch(t){case this.Class.Constants.DOMAIN_MODES.NORMAL:this.advanced=!1,this.deep=!1;break;case this.Class.Constants.DOMAIN_MODES.ADVANCED:this.advanced=!0,this.deep=!1;break;case this.Class.Constants.DOMAIN_MODES.DEEP:this.advanced=!1,this.deep=!0}}}class p{static get Config(){return u}static get Constants(){return n}static get DataMigration(){return g}static get Domain(){return m}static COLOR_BLUE=[66,133,244,255];static COLOR_BLUE_VIOLET=[138,43,226,255];static COLOR_FOREST_GREEN=[34,139,34,255];static COLOR_GREY=[85,85,85,255];static COLOR_ORANGE=[236,147,41,255];static COLOR_RED=[211,45,39,255];static BADGE_COLORS=[this.COLOR_GREY,this.COLOR_BLUE,this.COLOR_RED,this.COLOR_RED,this.COLOR_BLUE_VIOLET,this.COLOR_FOREST_GREEN];static LOGGER=new l("Background");static contextMenuRemoveAll(){return new Promise(((t,e)=>{chrome.contextMenus.removeAll((()=>{t(!1)}))}))}static async contextMenuSetup(){await this.contextMenuRemoveAll();const t={contextMenu:this.Config._defaults.contextMenu,password:this.Config._defaults.password},e=await this.Config.getSyncStorage(t);e.contextMenu&&(e.password||(chrome.contextMenus.create({id:"addSelection",title:"Add selection to filter",contexts:["selection"],documentUrlPatterns:["file://*/*","http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"removeSelection",title:"Remove selection from filter",contexts:["selection"],documentUrlPatterns:["file://*/*","http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"disableTabOnce",title:"Disable once",contexts:["all"],documentUrlPatterns:["http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"toggleTabDisable",title:"Toggle for tab",contexts:["all"],documentUrlPatterns:["http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"toggleForDomain",title:"Toggle for domain",contexts:["all"],documentUrlPatterns:["http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"toggleAdvancedForDomain",title:"Toggle advanced for domain",contexts:["all"],documentUrlPatterns:["http://*/*","https://*/*"]}),chrome.contextMenus.create({id:"toggleFramesForDomain",title:"Toggle frames for domain",contexts:["all"],documentUrlPatterns:["http://*/*","https://*/*"]})),chrome.contextMenus.create({id:"options",title:"Options",contexts:["all"]}))}static contextMenusOnClick(t,e){switch(t.menuItemId){case"addSelection":this.processSelection("addWord",t.selectionText);break;case"disableTabOnce":this.disableTabOnce(e.id);break;case"options":chrome.runtime.openOptionsPage();break;case"removeSelection":this.processSelection("removeWord",t.selectionText);break;case"toggleAdvancedForDomain":this.toggleDomain(new URL(e.url).hostname,"advanced");break;case"toggleForDomain":this.toggleDomain(new URL(e.url).hostname,"disable");break;case"toggleFramesForDomain":this.toggleDomain(new URL(e.url).hostname,"frames");break;case"toggleTabDisable":this.toggleTabDisable(e.id)}}static async disableTabOnce(t){const e=await this.loadBackgroundStorage();(await this.getTabOptions(e,t)).disabledOnce=this.Constants.TAB_DISABLE_ONCE.WILL_DISABLE,await this.saveBackgroundStorage(e),chrome.tabs.reload(t),this.LOGGER.info("disabling tab once.",t)}static getTabOptions(t,e){return t.tabs[e]||this.newTabOptions(t,e)}static async handleBackgroundDataRequest(t,e,s){const a=await this.loadBackgroundStorage(),r=t.source==this.Constants.MESSAGING.CONTEXT&&e&&e.tab&&e.tab.id?e.tab.id:t.tabId;if(!r)return s({disabledTab:!1}),!1;const i=this.getTabOptions(a,r),o={disabledTab:!1};let n=!1;t.source!=this.Constants.MESSAGING.CONTEXT||e.frameId!=this.Constants.TOP_WINDOW_FRAME_ID||i.counters&&!Object.keys(i.counters).length||(i.counters={},n=!0),(i.disabled||t.source==this.Constants.MESSAGING.CONTEXT&&i.disabledOnce==this.Constants.TAB_DISABLE_ONCE.WILL_DISABLE||t.source==this.Constants.MESSAGING.POPUP&&i.disabledOnce==this.Constants.TAB_DISABLE_ONCE.DISABLED)&&(o.disabledTab=!0),s(o),t.source!=this.Constants.MESSAGING.POPUP&&(i.disabledOnce==this.Constants.TAB_DISABLE_ONCE.WILL_DISABLE?(i.disabledOnce=this.Constants.TAB_DISABLE_ONCE.DISABLED,n=!0):i.disabledOnce==this.Constants.TAB_DISABLE_ONCE.DISABLED&&(i.disabledOnce=this.Constants.TAB_DISABLE_ONCE.NOT_SET,n=!0),t.iframe||(i.status=0,n=!0),n&&await this.saveBackgroundStorage(a))}static async handleInstall(t){chrome.runtime.openOptionsPage()}static async handleUpdate(t){this.contextMenuSetup();const e=chrome.runtime.getManifest().version;this.LOGGER.info(`Updated from ${t.previousVersion} to ${e}.`),this.runUpdateMigrations(t.previousVersion);try{null!=chrome.notifications&&await this.Config.getSyncStorage({showUpdateNotification:!0})&&chrome.notifications.create("extensionUpdate",{type:"basic",title:"Advanced Profanity Filter",message:"Update installed, click for changelog.",iconUrl:"img/icon64.png",isClickable:!0})}catch(t){this.LOGGER.warn("Error while displaying update notification",t)}}static async loadBackgroundStorage(){return(await this.Config.getLocalStorage({background:{tabs:{}}})).background}static newTabOptions(t,e,s={}){const a={counters:{},status:0,disabled:!1,disabledOnce:this.Constants.TAB_DISABLE_ONCE.NOT_SET},r=Object.assign({},a,s);return r.id=e,r.registeredAt=(new Date).getTime(),t.tabs[e]=r,t.tabs[e]}static notificationsOnClick(t){"extensionUpdate"===t&&(chrome.notifications.clear("extensionUpdate"),chrome.tabs.create({url:"https://github.com/FrostCo/AdvancedProfanityFilter/releases"}))}static async onInstalled(t){"install"==t.reason?await this.handleInstall(t):"update"==t.reason&&await this.handleUpdate(t)}static onMessage(t,e,s){if(t.destination!==this.Constants.MESSAGING.BACKGROUND)return!0;const a=chrome.action||chrome.browserAction;switch(t.source){case this.Constants.MESSAGING.CONTEXT:if(!0!==t.disabled)return!0===t.backgroundData?(this.handleBackgroundDataRequest(t,e,s),!0):(this.onContextMessageElse(a,t,e,s),!0);a.setIcon({path:"img/icon19-disabled.png",tabId:e.tab.id});break;case this.Constants.MESSAGING.OPTION:null!=t.updateContextMenus?this.contextMenuSetup():this.LOGGER.error("Received unhandled message.",JSON.stringify(t));break;case this.Constants.MESSAGING.POPUP:if(t.getStatus)return this.updatePopupStatus(t.tabId,null,s),!0;if(t.backgroundData)return this.handleBackgroundDataRequest(t,e,s),!0;if(t.enableTab)return this.toggleTabDisable(t.tabId,!1,!0,s),!0;this.LOGGER.error("Received unhandled message.",JSON.stringify(t));break;default:this.LOGGER.error("Received message without a supported source:",JSON.stringify(t))}s()}static async onContextMessageElse(t,s,a,r){if(s.status&&a&&a.tab&&a.tab.id&&this.updateStatus(t,a.tab.id,s.status,s.forceUpdate),null!=s.counter){const r=await this.loadBackgroundStorage(),i=this.getTabOptions(r,a.tab.id);i.counters[a.frameId]=s.counter,await this.saveBackgroundStorage(r);const o=Object.values(i.counters).reduce(((t,e)=>t+e));t.setBadgeText({text:e(o),tabId:a.tab.id})}}static async onStartup(){this.contextMenuSetup(),await this.saveBackgroundStorage({tabs:{}})}static async processSelection(t,e){const s=await this.Config.load("words");if(s[t](e))try{await s.save("words"),chrome.tabs.reload()}catch(t){this.LOGGER.errorTime(`Failed to process selection '${e}'.`,t)}}static async runUpdateMigrations(t){if(this.DataMigration.migrationNeeded(t)){const e=await this.Config.load(),s=new this.DataMigration(e);await s.byVersion(t)&&e.save()}}static async saveBackgroundStorage(t){await this.Config.saveLocalStorage({background:t})}static async tabsOnRemoved(t){const e=await this.loadBackgroundStorage();e.tabs[t]&&(delete e.tabs[t],await this.saveBackgroundStorage(e))}static async tabsOnReplaced(t,e){const s=await this.loadBackgroundStorage();s.tabs[e]&&(s.tabs[t]=s.tabs[e],s.tabs[t].id=t,delete s.tabs[e],await this.saveBackgroundStorage(s))}static async tabsOnUpdated(t,e,s){if(e.url){const s={source:this.Constants.MESSAGING.BACKGROUND,destination:this.Constants.MESSAGING.CONTEXT,urlUpdate:e.url};chrome.tabs.sendMessage(t,s,(()=>chrome.runtime.lastError))}}static async toggleDomain(t,e){const s=await this.Config.load(["domains","enabledDomainsOnly","enabledFramesOnly"]),a=this.Domain.byHostname(t,s.domains);switch(e){case"advanced":a.advanced=!a.advanced;break;case"disable":s.enabledDomainsOnly?a.enabled=!a.enabled:a.disabled=!a.disabled;break;case"frames":s.enabledFramesOnly?a.framesOn=!a.framesOn:a.framesOff=!a.framesOff}try{await a.save(s),chrome.tabs.reload()}catch(t){this.LOGGER.error(`Failed to modify '${e}' for domain '${a.cfgKey}'.`,t,a)}}static async toggleTabDisable(t,e=!0,s=!1,a=null){const r=await this.loadBackgroundStorage(),i=this.getTabOptions(r,t);i.disabled=!s&&!i.disabled,await this.saveBackgroundStorage(r),e&&chrome.tabs.reload(t),a&&a(i.disabled)}static async updatePopupStatus(t,e,s){if(!e){const s=await this.loadBackgroundStorage();e=(await this.getTabOptions(s,t)).status}s||(s=chrome.runtime.sendMessage),s({destination:this.Constants.MESSAGING.POPUP,source:this.Constants.MESSAGING.BACKGROUND,status:e,tabId:t},(()=>chrome.runtime.lastError))}static async updateStatus(t,e,s,a=!1){const r=await this.loadBackgroundStorage(),i=await this.getTabOptions(r,e);(a||s>i.status)&&(i.status=s,t.setBadgeBackgroundColor({color:this.BADGE_COLORS[i.status],tabId:e}),this.updatePopupStatus(e,i.status),await this.saveBackgroundStorage(r))}constructor(){throw new Error("This is a static class. Call methods directly on the class, no instance needed.")}}class f extends n{static AUDIO_RULE_MODES={CUE:"cue",DYNAMIC:"dynamic",ELEMENT_CHILD:"elementChild",ELEMENT:"element",TEXT:"text",WATCHER:"watcher",YTAUTO:"ytauto"};static BUILD_TARGET_IOS="ios";static BUILD_TARGET_MACOS="macos";static MANAGED={NONE:0,DEFAULTS:1,PARTIAL:2,ALL:3};static MUTE_METHODS={TAB:0,VIDEO_VOLUME:1,VIDEO_MUTE:2,NONE:9};static SHOW_SUBTITLES={ALL:0,FILTERED:1,UNFILTERED:2,NONE:3};static STATS_TYPE_AUDIO="audio";static STATUS={DISABLED:0,NORMAL:1,ADVANCED:2,DEEP:3,MUTE_PAGE:4,CAPTIONS:5}}class E extends u{_managed;_protectedKeys;audioWordlistId;customAudioSites;fillerAudio;muteAudio;muteAudioOnly;muteCueRequireShowing;muteMethod;showSubtitles;unmuteDelay;youTubeAutoMatchCensored;youTubeAutoSubsMax;youTubeAutoSubsMin;static get Constants(){return f}get Class(){return this.constructor}static _premiumDefaults={audioWordlistId:f.ALL_WORDS_WORDLIST_ID,customAudioSites:null,fillerAudio:"",muteAudio:!1,muteAudioOnly:!1,muteCueRequireShowing:!1,muteMethod:this.BUILD.config.muteMethod||this.Constants.MUTE_METHODS.TAB,showSubtitles:f.SHOW_SUBTITLES.ALL,unmuteDelay:0,youTubeAutoMatchCensored:!0,youTubeAutoSubsMax:0,youTubeAutoSubsMin:0};static _defaults=this.initializeDefaults({},this._configDefaults,this._webDefaults,this._premiumDefaults);static _persistableKeys=Object.keys(this._defaults);static assignDefaultValue(t,e){e._managed===f.MANAGED.NONE&&super.assignDefaultValue(t,e)}static getManagedStorage(t){return"string"==typeof t&&(t=[t]),new Promise(((e,s)=>{chrome.storage.managed.get(t,(t=>{chrome.runtime.lastError?s(chrome.runtime.lastError):e(t)}))}))}static get isSafariBuild(){return this.BUILD.target==this.Constants.BUILD_TARGET_IOS||this.BUILD.target==this.Constants.BUILD_TARGET_MACOS}static async load(t=[],e={}){return t=this.keysToLoad(t),e._managed=f.MANAGED.NONE,e._protectedKeys=[],this.managedStorageSupported&&await this.loadManagedStorage(t,e),super.load(t,e)}static async loadManagedStorage(t,e){try{t.includes("_managed")||t.push("_managed");const s=await this.getManagedStorage(t),a=Object.keys(s);for(const a of t)"words"!=a||s.hasOwnProperty(a)?e[a]=s.hasOwnProperty(a)?s[a]:this._defaults[a]:e[a]=this._defaultWords;if(e._managed!=f.MANAGED.ALL&&e._managed!=f.MANAGED.PARTIAL||(e._protectedKeys=a),e._managed==f.MANAGED.ALL)return new this(e)}catch(t){}t=i(t,"_managed")}static get managedStorageSupported(){return this.BUILD.target===f.BUILD_TARGET_CHROME&&3==this.BUILD.manifestVersion}static requestedkeysForLocalStorage(t,e){const s=i(t,e._protectedKeys);return super.requestedkeysForLocalStorage(s,e)}static requestedkeysForSyncStorage(t,e,s){return s._protectedKeys.length&&(e=o(e).concat(s._protectedKeys)),super.requestedkeysForSyncStorage(t,e,s)}constructor(t){super(t),Object.assign(this,this.Class._premiumDefaults,t),void 0===this._protectedKeys&&(this._protectedKeys=[])}keysToSave(t){return i(t=super.keysToSave(t),this._protectedKeys)}async prepareLocalDataForSave(t){if(this.Class.isSafariBuild){const e=this.removeNullConfig(t);e.length&&await this.Class.removeLocalStorage(e)}}async prepareSyncDataForSave(t){if(this.Class.isSafariBuild){const e=this.removeNullConfig(t);e.length&&await this.Class.removeLocalStorage(e)}}removeNullConfig(t){const e=Object.keys(t).filter((e=>null==t[e]));return e.forEach((e=>delete t[e])),e}}class S extends g{static get Config(){return E}static get Constants(){return f}static _premiumMigrations=[{version:"2.12.0",name:"overwriteMuteCueRequireShowingDefault",runOnImport:!1}];static migrations=this.compileMigrations(this._premiumMigrations);overwriteMuteCueRequireShowingDefault(){const t=this.cfg;!0===t.muteCueRequireShowing&&(t.muteCueRequireShowing=!1)}}function T(t){try{return t.split(".").reduce(((t,e)=>t&&t[e]),window)}catch{return null}}function b(t,e,s=document.body){if(document.getElementById(t))throw new Error(`Element with id '${t}' already exists.`);const a=document.createElement("script");a.id=t,a.textContent=e,s.appendChild(a)}class y extends p{static get Config(){return E}static get Constants(){return f}static get DataMigration(){return S}static async contextMenuSetup(){this.Config.isSafariBuild||super.contextMenuSetup()}static async getGlobalVariable(t,e,s){const[{result:a}]=await chrome.scripting.executeScript({func:T,args:[t],target:{tabId:e.tab.id,frameIds:[e.frameId]},world:"MAIN"});s(a)}static async handleInstall(t){let e=!0;try{if(this.Config.BUILD.target==this.Constants.BUILD_TARGET_CHROME&&3==this.Config.BUILD.manifestVersion){const t={_openOptionsOnInstall:!0};e=(await this.Config.getManagedStorage(t))._openOptionsOnInstall}}catch(t){this.LOGGER.warn("Error while trying to load managed config",t)}e&&super.handleInstall(t)}static async handleRequest(t,e="GET",s){s(await async function(t,e){return fetch?await async function(t,e="GET"){const s=await fetch(t,{method:e});return await s.text()}(t,e):await function(t,e){return new Promise(((s,a)=>{const r=new XMLHttpRequest;r.open(e,t),r.onload=function(){this.status>=200&&this.status<300?s(this.response):a({status:this.status,statusText:this.statusText})},r.onerror=function(){a({status:this.status,statusText:this.statusText})},r.send()}))}(t,e)}(t,e))}static async injectScript(t,e,s,a){const[{result:r}]=await chrome.scripting.executeScript({func:b,args:[t,e],target:{tabId:s.tab.id,frameIds:[s.frameId]},world:"MAIN"});a(r)}static async onContextMessageElse(t,e,s,a){if(e.fetch)this.handleRequest(e.fetch,e.fetchMethod,a);else if(e.globalVariable)this.getGlobalVariable(e.globalVariable,s,a);else if(e.scriptId&&e.script)this.injectScript(e.scriptId,e.script,s,a);else{if(null!=e.mute&&chrome.tabs.update(s.tab.id,{muted:e.mute},(()=>chrome.runtime.lastError)),!0===e.clearMute&&null!=s.tab){const{muted:t,reason:e,extensionId:a}=s.tab.mutedInfo;t&&"extension"==e&&a==chrome.runtime.id&&chrome.tabs.update(s.tab.id,{muted:!1},(()=>chrome.runtime.lastError))}super.onContextMessageElse(t,e,s,a)}}}chrome.contextMenus.onClicked.addListener(((t,e)=>{y.contextMenusOnClick(t,e)})),chrome.runtime.onInstalled.addListener((t=>{y.onInstalled(t)})),chrome.runtime.onMessage.addListener(((t,e,s)=>y.onMessage(t,e,s))),chrome.runtime.onStartup.addListener((()=>{y.onStartup()})),chrome.tabs.onRemoved.addListener((t=>{y.tabsOnRemoved(t)})),chrome.tabs.onReplaced.addListener(((t,e)=>{y.tabsOnReplaced(t,e)})),chrome.tabs.onUpdated.addListener(((t,e,s)=>{y.tabsOnUpdated(t,e,s)})),null!=chrome.notifications&&chrome.notifications.onClicked.addListener((t=>{y.notificationsOnClick(t)}))})();