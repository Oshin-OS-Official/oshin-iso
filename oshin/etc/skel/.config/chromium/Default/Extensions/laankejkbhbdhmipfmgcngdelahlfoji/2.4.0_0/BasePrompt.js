var P=Object.defineProperty;var E=(i,t,n)=>t in i?P(i,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[t]=n;var s=(i,t,n)=>(E(i,typeof t!="symbol"?t+"":t,n),n);import{A as e,P as r,H as u,c as g,T as h,j as S}from"./CoreAPI.js";import{B as v}from"./Brightline.min.js";const o={PromptBirthYear:"PromptBirthYear",PromptReview:"PromptReview",PromptSurvey:"PromptSurvey"},A=`<form id="birth-year-form">
    <div id="promptingBirthYear" class="relative sm:fixed sm:rounded-t-lg sm:border-t sm:border-l sm:border-r border-base-300 sm:border-solid left-0 right-0 bottom-0 bg-base-200 md:w-[80%] mx-auto inline-flex sm:items-center justify-center flex-col sm:flex-row gap-3 p-3 w-full">
        <p data-i18n="askBirthYearTitle" class="prompt-description text-sm text-base-content"></p>
        <div class="input-block flex gap-2 sm:items-center">
            <label data-i18n="askBirthYear" class="prompt-title text-sm font-bold" for="birthYear"></label>
            <div class="tooltip-open tooltip-error" data-tip="accent" id="promptWarningMessage">
                <input type="number" id="birthYear" class="prompt-input input input-bordered input-xs w-24" maxlength="4" placeholder="YYYY" />
            </div>
            <button type="submit" id="btnSubmitBirthYear" class="btn-submit btn btn-primary btn-xs" data-i18n="submit"></button>
        </div>
        <iconify-icon id="closePrompting" width="20" class="btn-close absolute right-2 cursor-pointer" icon="mdi:window-close"></iconify-icon>
    </div>
</form>
`;var l=e.Utils.createScopedLog("PromptBirthYearView");class f{constructor(){l("construct","Constructing PromptBirthYearView",null,"DEBUG")}init(){l("init","Initializing view",null,"DEBUG");const n=new v(A).render();this.isOptionsPage()?(document.getElementsByTagName("body")[0].insertAdjacentHTML("beforeend",n),document.getElementById("promptingBirthYear").classList.add("fixed-bottom-block")):(document.getElementsByTagName("body")[0].insertAdjacentHTML("beforeend",n),document.getElementById("promptingBirthYear").classList.add("fixed-bottom-block-popup")),e.StayFocusd.localizeHTML(document),this.bindUIHandlers()}isExtensionPage(){return location.hostname===e.Chrome.Extension.getID()}isOptionsPage(){return this.isExtensionPage()&&location.pathname==="/options.html"}closePrompting(){document.getElementById("promptingBirthYear").classList.add("hidden")}bindUIHandlers(){l("bindUIHandlers","Binding UI handlers",null,"TRACE"),document.getElementById("birth-year-form").addEventListener("submit",t=>{const n=document.getElementById("birthYear").value;this.validateBirthYear(n)&&(r.publish("PromptBirthYear.submit",{year:n}),this.closePrompting()),t.preventDefault()}),document.getElementById("birthYear").addEventListener("input",t=>{document.getElementById("promptWarningMessage").classList.remove("tooltip"),t.target.value.length>4&&(t.target.value=t.target.value.slice(0,-1))}),document.getElementById("closePrompting").addEventListener("click",()=>{this.closePrompting(),r.publish("PromptBirthYear.close")}),e.Analytics.bindHtmlEvents()}validateBirthYear(t){const n=Number(t);return isNaN(n)?(this.showWarningMessage(e.Chrome.Translation.get("birthYearErrorsNan")),!1):t.length!=4?(this.showWarningMessage(e.Chrome.Translation.get("birthYearErrorsLength")),!1):this.isUnderCurrentYear(t)?this.isUnder100(t)?(document.getElementById("promptWarningMessage").classList.remove("tooltip"),!0):(this.showWarningMessage(e.Chrome.Translation.get("birthYearErrorsAgeMax")),!1):(this.showWarningMessage(e.Chrome.Translation.get("birthYearErrorsAgeMin")),!1)}isUnder100(t){return new Date().getFullYear()-t<100}isUnderCurrentYear(t){return t<new Date().getFullYear()}showWarningMessage(t){document.getElementById("promptWarningMessage").setAttribute("data-tip",t),document.getElementById("promptWarningMessage").classList.add("tooltip")}}var a=e.Utils.createScopedLog("PromptBirthYearController");class T{constructor(){s(this,"view",null);s(this,"PROMPT_AT_TIME_OF_DAY",14*u);s(this,"DEFAULT_INTERVAL",2*g);a("construct","Constructing PromptBirthYearController",null,"DEBUG"),this.view=new f}async initAsync(){return a("init","Initializing controller",null,"DEBUG"),await e.Settings.initAsync(),await this.canShowPrompt()?(this.mountView(),!0):!1}mountView(){e.Analytics.event("PROMPT_BIRTHYEAR_SHOW"),this.view.init(),this.addListeners()}addListeners(){a("addListeners","Adding listeners",null,"TRACE"),r.listen("PromptBirthYear.submit",async(t,{year:n})=>{await e.Settings.setAsync({age:n}),e.Analytics.event("PROMPT_BIRTHYEAR_SUBMITED")}),r.listen("PromptBirthYear.close",async()=>{e.Analytics.event("PROMPT_BIRTHYEAR_DISMISSED"),this.reschedulePrompt()})}async canShowPrompt(){if(e.Settings.get("age")!=null)return!1;const n=e.Settings.get("promptBirthYearAt");return n==null?(await this.reschedulePrompt(),!1):new Date(n)<=new Date}async reschedulePrompt(){let t=e.Settings.get("promptBirthYearInterval");t==null?t=this.DEFAULT_INTERVAL:t=t*2;const n=h.getToday()+t+this.PROMPT_AT_TIME_OF_DAY;await e.Settings.setAsync({promptBirthYearAt:n}),await e.Settings.setAsync({promptBirthYearInterval:t})}}const B=`<div id="promptingReview"
     class="relative sm:fixed sm:rounded-t-lg sm:border-t sm:border-l sm:border-r border-base-300 sm:border-solid left-0 right-0 bottom-0 bg-base-200 md:w-[80%] mx-auto inline-flex items-center justify-center gap-3 p-3 w-full">
    <strong class="prompt-title text-sm" data-i18n="reviewExtensionAsk"></strong>
    <button id="btnOpenStore" class="btn-submit btn btn-primary btn-outline btn-xs" data-i18n="reviewExtensionPrompt"></button>
    <iconify-icon id="closePromptingReview" width="20" class="btn-close absolute right-2 cursor-pointer" icon="mdi:window-close"></iconify-icon>
</div>
`;var c=e.Utils.createScopedLog("PromptReviewView");class I{constructor(){c("construct","Constructing PromptReviewView",null,"DEBUG")}init(){c("init","Initializing view",null,"DEBUG");const n=new v(B).render();this.isOptionsPage()?(document.getElementsByTagName("body")[0].insertAdjacentHTML("beforeend",n),document.getElementById("promptingReview").classList.add("fixed-bottom-block")):(document.getElementsByTagName("body")[0].insertAdjacentHTML("beforeend",n),document.getElementById("promptingReview").classList.add("fixed-bottom-block-popup")),e.StayFocusd.localizeHTML(document),this.bindUIHandlers()}isExtensionPage(){return location.hostname===e.Chrome.Extension.getID()}isOptionsPage(){return this.isExtensionPage()&&location.pathname==="/options.html"}closePrompting(){document.getElementById("promptingReview").classList.add("hidden")}bindUIHandlers(){c("bindUIHandlers","Binding UI handlers",null,"TRACE"),document.getElementById("btnOpenStore").addEventListener("click",()=>{r.publish("PromptReview.openStore"),this.closePrompting()}),document.getElementById("closePromptingReview").addEventListener("click",()=>{this.closePrompting(),r.publish("PromptReview.close")}),e.Analytics.bindHtmlEvents()}}var m=e.Utils.createScopedLog("PromptReviewController");class R{constructor(){s(this,"view",null);s(this,"CHROME_STORE_URL",`https://chromewebstore.google.com/detail/stayfocusd-block-distract/${S.APP_ID}/reviews`);s(this,"PROMPT_AT_TIME_OF_DAY",14*u);s(this,"DEFAULT_INTERVAL",2*g);m("construct","Constructing PromptReviewController",null,"DEBUG"),this.view=new I}async initAsync(){return m("init","Initializing controller",null,"DEBUG"),await e.Settings.initAsync(),await this.canShowPrompt()?(this.mountView(),!0):!1}mountView(){e.Analytics.event("PROMPT_REVIEW_SHOW"),this.view.init(),this.addListeners()}addListeners(){m("addListeners","Adding listeners",null,"TRACE"),r.listen("PromptReview.openStore",async()=>{e.Analytics.event("REVIEW_PROMPT_CTA_CLICKED"),e.Chrome.Tab.create({url:this.CHROME_STORE_URL}),await e.Settings.setAsync({promptReview:!0})}),r.listen("PromptReview.close",()=>{e.Analytics.event("REVIEW_PROMPT_DISMISSED"),this.reschedulePrompt()})}async canShowPrompt(){if(e.Settings.get("promptReview")==!0)return;const n=e.Settings.get("promptReviewAt");return n==null?(await this.reschedulePrompt(),!1):new Date(n)<=new Date}async reschedulePrompt(){let t=e.Settings.get("promptReviewInterval");t==null?t=this.DEFAULT_INTERVAL:t=t*2;const n=h.getToday()+t+this.PROMPT_AT_TIME_OF_DAY;await e.Settings.setAsync({promptReviewAt:n}),await e.Settings.setAsync({promptReviewInterval:t})}}const L=`<div id="promptingSurvey" class="relative sm:fixed sm:rounded-t-lg sm:border-t sm:border-l sm:border-r border-base-300 sm:border-solid left-0 right-0 bottom-0 bg-base-200 md:w-[80%] mx-auto inline-flex flex-col sm:flex-row sm:items-center justify-center sm:gap-3 p-3 w-full text-sm">
    <strong class="prompt-title" data-i18n="surveyAsk"></strong>
    <div class="flex">
        <span class="prompt-title" data-i18n="surveyLinkMessage"></span>&nbsp;
        <a id="linkOpenSurvey" class="font-bold link link-secondary" href="https://forms.gle/SNwdQR43Z1kbuHab6" target="_blank">StayFocusd User Feedback Form</a>
    </div>
    <iconify-icon id="closePromptingSurvey" width="20" class="btn-close absolute right-2 cursor-pointer" icon="mdi:window-close"></iconify-icon>
</div>
`;var d=e.Utils.createScopedLog("PromptSurveyView");class _{constructor(){d("construct","Constructing PromptSurveyView",null,"DEBUG")}init(){d("init","Initializing view",null,"DEBUG");const n=new v(L).render();document.getElementsByTagName("body")[0].insertAdjacentHTML("beforeend",n),document.getElementById("promptingSurvey").classList.add("fixed-bottom-block-popup"),e.StayFocusd.localizeHTML(document),this.bindUIHandlers()}closePrompting(){document.getElementById("promptingSurvey").classList.add("hidden")}bindUIHandlers(){d("bindUIHandlers","Binding UI handlers",null,"TRACE"),document.getElementById("linkOpenSurvey").addEventListener("click",()=>{r.publish("PromptSurvey.openSurvey"),this.closePrompting()}),document.getElementById("closePromptingSurvey").addEventListener("click",()=>{this.closePrompting(),r.publish("PromptSurvey.close")}),e.Analytics.bindHtmlEvents()}}var p=e.Utils.createScopedLog("PromptSurveyController");class Y{constructor(){s(this,"view",null);s(this,"PROMPT_AT_TIME_OF_DAY",14*u);s(this,"DEFAULT_INTERVAL",2*g);p("construct","Constructing PromptSurveyTplController",null,"DEBUG"),this.view=new _}async initAsync(){return p("init","Initializing controller",null,"DEBUG"),await e.Settings.initAsync(),await this.canShowPrompt()?(this.mountView(),!0):!1}mountView(){e.Analytics.event("PROMPT_SURVEY_SHOW"),this.view.init(),this.addListeners()}addListeners(){p("addListeners","Adding listeners",null,"TRACE"),r.listen("PromptSurvey.openSurvey",async()=>{e.Analytics.event("PROMPT_SURVEY_CTA_CLICKED"),await e.Settings.setAsync({promptSurvey:!0})}),r.listen("PromptSurvey.close",()=>{e.Analytics.event("PROMPT_SURVEY_DISMISSED"),this.reschedulePrompt()})}async canShowPrompt(){if(e.Settings.get("promptSurvey")==!0)return;const n=e.Settings.get("promptSurveyAt");return n==null?(await this.reschedulePrompt(),!1):new Date(n)<=new Date}async reschedulePrompt(){let t=e.Settings.get("promptSurveyInterval");t==null?t=this.DEFAULT_INTERVAL:t=t*2;const n=h.getToday()+t+this.PROMPT_AT_TIME_OF_DAY;await e.Settings.setAsync({promptSurveyAt:n}),await e.Settings.setAsync({promptSurveyInterval:t})}}var b=e.Utils.createScopedLog("BasePrompt");class C{constructor(){b("construct","Constructing BasePrompt",null,"DEBUG")}async init(...t){b("init","Initializing controller",null,"DEBUG"),t.length==0&&(t=Object.values(o));let n=!1;for(const y of t)switch(y){case o.PromptBirthYear:n||(n=await new T().initAsync());break;case o.PromptReview:n||(n=await new R().initAsync());break;case o.PromptSurvey:n||(n=await new Y().initAsync());break}}}export{C as B,o as P};
//# sourceMappingURL=BasePrompt.js.map
