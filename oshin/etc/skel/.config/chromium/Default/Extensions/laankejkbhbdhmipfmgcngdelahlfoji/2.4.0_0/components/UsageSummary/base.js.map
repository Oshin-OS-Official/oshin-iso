{"version":3,"file":"base.js","sources":["../../../src/components/UsageSummary/UsageSummaryModel.js","../../../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/auto/auto.js","../../../src/components/UsageSummary/template.html?raw","../../../src/components/UsageSummary/UsageSummaryView.js","../../../src/components/UsageSummary/UsageSummaryController.js","../../../src/components/UsageSummary/main.js"],"sourcesContent":["import { API } from '~/core/API'\nimport Time, { DAY, MINUTE } from '~/core/Time'\nimport {\n  isHostnameBlocked,\n  getBlocklist,\n  getAllowlist,\n} from '~/utils/isHostnameBlocked'\n\nexport default class UsageSummaryModel {\n  summary = []\n  allowList = []\n  isShowAds = false\n\n  async loadData(date) {\n    let now = Date.now()\n    let startDate = Time.getToday()\n    if (date != undefined) startDate = Time.getStartOfDay(date)\n    const endDate = startDate + DAY\n\n    const port = chrome.runtime.connect({ name: 'getUsageSummaryData' })\n    port.postMessage({\n      message: 'usage.getUsageSummaryData.request',\n      startDate: startDate,\n      endDate: endDate,\n    })\n\n    const { sessions, ads } = await new Promise((resolve) => {\n      port.onMessage.addListener(function (data) {\n        if (data.message === 'usage.getUsageSummaryData.response') {\n          resolve({ sessions: data.sessions, ads: data.ads })\n        }\n      })\n    })\n\n    let blocklist = []\n    const blockAllWebsites = API.Settings.get('isBlockAllWebsites')\n    if (blockAllWebsites) blocklist = null\n    else blocklist = getBlocklist()\n    const allowlist = await getAllowlist()\n    this.allowList = allowlist\n    const maxAllowedTimeMin = (await API.Storage.get('maxTimeAllowed')) ?? 10\n    const maxAllowedTimeMs = maxAllowedTimeMin * MINUTE\n\n    // Return first blocked sessions whose total duration add up to the max allowed time\n    let totalDuration = 0\n    const blockedDurations = sessions.reduce((acc, session) => {\n      const isBlocked = isHostnameBlocked(session.appId, blocklist, allowlist)\n      if (!isBlocked) return acc\n\n      let duration = (session.endedAt ?? now) - session.startedAt\n      // Don't go over the max allowed time\n      if (totalDuration + duration > maxAllowedTimeMs) {\n        duration = maxAllowedTimeMs - totalDuration\n      }\n      totalDuration += duration\n\n      acc.push({\n        website: session.appId,\n        duration,\n        adCount: ads.filter((ad) => ad.sessionId == session.id).length,\n      })\n      return acc\n    }, [])\n\n    // Create a map of website -> duration\n    const durations = blockedDurations.reduce((acc, session) => {\n      const elem = acc.find((item) => item.website == session.website)\n      if (elem != null) {\n        elem.duration += session.duration\n        elem.adCount += session.adCount\n      } else\n        acc.push({\n          website: session.website,\n          duration: session.duration,\n          adCount: session.adCount,\n        })\n      return acc\n    }, [])\n\n    // Then, convert the map to an array of { website, duration }\n    this.summary = durations.sort((a, b) => b.duration - a.duration)\n  }\n}\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","export default \"<div class=\\\"shadow-[rgba(0,_0,_0,_0.24)_0px_3px_8px] rounded-2xl p-4 h-full\\\">\\n    <div class=\\\"flex flex-col items-center m-5\\\">\\n        <div class=\\\"tabs tabs-boxed\\\">\\n            <a id=\\\"blockListBtn\\\" class=\\\"tab tab-active\\\">Blocked websites</a>\\n            <a id=\\\"allowedListBtn\\\" class=\\\"tab\\\">Allowed websites</a>\\n        </div>\\n        <div id=\\\"blockListTab\\\">\\n            <div class=\\\"mt-4 text-center\\\">\\n                <p class=\\\"inline-block font-bold text-base\\\">Here's how you spent time on blocked sites:</p>\\n                <input type=\\\"date\\\" class=\\\"inline-block p-1 border-slate-300 border rounded-sm\\\" id=\\\"date\\\" />\\n            </div>\\n            <canvas id=\\\"chart\\\" width=\\\"540\\\" height=\\\"350\\\"></canvas>\\n            <div class=\\\"form-control\\\">\\n                <label class=\\\"label cursor-pointer justify-start\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"checkbox checkbox-primary\\\" id=\\\"ads\\\" name=\\\"ads\\\" />\\n                    <span id=\\\"adsLabel\\\" for=\\\"ads\\\" class=\\\"label-text ml-1 font-bold\\\">Show ad count</span>\\n                </label>\\n                <p class=\\\"ml-1\\\">The number of distractions you have had from these blocked websites</p>\\n            </div>\\n        </div>\\n        <div id=\\\"allowedListTab\\\" class=\\\"hidden m-4 w-[70%]\\\">\\n            <ul id=\\\"allowedList\\\" class=\\\"list-disc\\\">\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\"","import Chart from 'chart.js/auto'\nimport { defineChartColors } from '@sensortower/chart-colors'\nimport Time from '~/core/Time'\nimport Brightline from 'brightline.js'\nimport tpl from './template.html?raw'\n\nexport default class UsageSummaryView {\n  model\n  chart\n\n  constructor(model) {\n    this.model = model\n\n    const template = new Brightline(tpl)\n    document.body.innerHTML = template.render()\n\n    this.addEventListeners()\n\n    document.getElementById('date').valueAsDate = new Date()\n\n    const canvas = document.getElementById('chart')\n\n    this.fillChart(canvas)\n    this.fillAllowedList()\n  }\n\n  addEventListeners() {\n    const labelForCheckbox = document.getElementById('adsLabel')\n    const checkbox = document.getElementById('ads')\n    labelForCheckbox.addEventListener('click', () => {\n      this.model.isShowAds = !checkbox.checked\n      this.chart.data = this.getDataForChart()\n      this.chart.update()\n    })\n\n    const date = document.getElementById('date')\n    date.addEventListener('change', async (event) => {\n      await this.model.loadData(new Date(event.target.value))\n      this.chart.data = this.getDataForChart()\n      this.chart.update()\n    })\n\n    function setActiveBlockTab() {\n      blockTabBtn.classList.add('tab-active')\n      allowedTabBtn.classList.remove('tab-active')\n      blockList.classList.remove('hidden')\n      allowedList.classList.add('hidden')\n    }\n\n    function setActiveAllowedTab() {\n      allowedTabBtn.classList.add('tab-active')\n      blockTabBtn.classList.remove('tab-active')\n      allowedList.classList.remove('hidden')\n      blockList.classList.add('hidden')\n    }\n\n    const blockList = document.getElementById('blockListTab')\n    const allowedList = document.getElementById('allowedListTab')\n\n    const blockTabBtn = document.getElementById('blockListBtn')\n    blockTabBtn.addEventListener('click', () => {\n      setActiveBlockTab()\n    })\n    const allowedTabBtn = document.getElementById('allowedListBtn')\n    allowedTabBtn.addEventListener('click', () => {\n      setActiveAllowedTab()\n    })\n  }\n\n  fillAllowedList() {\n    function getUrl(url) {\n      return !url.startsWith('http') ? (url = `https://${url}`) : url\n    }\n\n    const block = document.getElementById('allowedList')\n    this.model.allowList.forEach((element) => {\n      const item = document.createElement('li')\n      const link = document.createElement('a')\n      link.href = getUrl(element)\n      link.innerText = element\n      link.target = '_blank'\n      link.classList.add('link', 'link-info', 'text-sm')\n      item.appendChild(link)\n      block.appendChild(item)\n    })\n  }\n\n  fillChart(canvas) {\n    const afterDrawPlugin = {\n      id: 'emptyChart',\n      afterDraw: function (chart) {\n        if (chart.data.datasets[0].data.length < 1) {\n          const ctx = chart.ctx\n          ctx.textAlign = 'center'\n          ctx.textBaseline = 'middle'\n          ctx.font = '30px Arial'\n          ctx.fillText('No data to display', chart.width / 2, chart.height / 2)\n          ctx.restore()\n        }\n      },\n    }\n\n    this.chart = new Chart(canvas, {\n      type: 'doughnut',\n      options: {\n        responsive: false,\n        layout: {\n          padding: 16,\n        },\n        plugins: {\n          legend: {\n            position: 'right',\n            labels: {\n              usePointStyle: true,\n              pointStyle: 'circle',\n            },\n          },\n          tooltip: {\n            callbacks: {\n              label: (context) =>\n                this.model.isShowAds\n                  ? ` ${context.raw} ads`\n                  : ` ${Time.formatDurationInMilliseconds(context.raw)}`,\n            },\n          },\n        },\n        elements: {\n          arc: {\n            borderColor: '#f4f4f4',\n          },\n        },\n      },\n      plugins: [afterDrawPlugin],\n      data: this.getDataForChart(),\n    })\n  }\n\n  getDataForChart() {\n    const getSeriesColor = defineChartColors([\n      '#ED3B3B',\n      '#F48E2F',\n      '#FAD61D',\n      '#40DA99',\n      '#4FE6E8',\n      '#5080E7',\n      '#854FE8',\n    ])\n\n    if (this.model.isShowAds) {\n      const modelForAds = this.model.summary.filter((item) => item.adCount > 0)\n      return {\n        labels: modelForAds.map((item) => item.website),\n        datasets: [\n          {\n            data: modelForAds.map((item) => item.adCount),\n            backgroundColor: modelForAds.map((_, index) =>\n              getSeriesColor(index),\n            ),\n            hoverOffset: 4,\n          },\n        ],\n      }\n    } else\n      return {\n        labels: this.model.summary.map((item) => item.website),\n        datasets: [\n          {\n            data: this.model.summary.map((item) => item.duration),\n            backgroundColor: this.model.summary.map((_, index) =>\n              getSeriesColor(index),\n            ),\n            hoverOffset: 4,\n          },\n        ],\n      }\n  }\n}\n","import API from '~/core/CoreAPI'\nimport UsageSummaryModel from './UsageSummaryModel'\nimport UsageSummaryView from './UsageSummaryView'\n\nexport default class UsageSummaryController {\n  async init() {\n    await API.Settings.initAsync()\n    await API.BlockedGroupsRepository.init()\n    await API.WhitelistRepository.init()\n\n    const model = new UsageSummaryModel()\n    await model.loadData()\n\n    new UsageSummaryView(model)\n  }\n}\n","import $ from 'jquery'\nimport API from '~/core/CoreAPI'\nimport UsageSummaryController from '~/components/UsageSummary/UsageSummaryController'\n\nconst controller = new UsageSummaryController()\n\n$(document).ready(function () {\n  API.Bugsnag.init('usage-summary')\n  controller.init()\n})\n"],"names":["UsageSummaryModel","__publicField","date","now","startDate","Time","endDate","DAY","port","sessions","ads","resolve","data","blocklist","API","getBlocklist","allowlist","getAllowlist","maxAllowedTimeMs","MINUTE","totalDuration","durations","acc","session","isHostnameBlocked","duration","ad","elem","item","a","b","Chart","registerables","tpl","UsageSummaryView","model","template","Brightline","canvas","labelForCheckbox","checkbox","event","setActiveBlockTab","blockTabBtn","allowedTabBtn","blockList","allowedList","setActiveAllowedTab","getUrl","url","block","element","link","afterDrawPlugin","chart","ctx","context","getSeriesColor","defineChartColors","modelForAds","_","index","UsageSummaryController","controller","$"],"mappings":"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","x_google_ignoreList":[1]}