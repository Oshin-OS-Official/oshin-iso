{"version":3,"file":"ActivityMonitorModel.js","sources":["../src/components/ActivityMonitor/ActivityMonitorModel.js"],"sourcesContent":["import Logger from '~/core/Logger'\nimport API from '~/core/CoreAPI'\n\n/**\n * Alias for Logger.log(). Prepends class name to funcName.\n *\n * @param originator The name of the instance to prepend to the log message\n * @param funcName The name of the function generating the log message\n * @param message The message to log\n * @param payload Data object\n * @param level Log level (ERROR, WARN, INFO, DEBUG)\n */\nvar log = function (originator, funcName, message, payload, level) {\n  Logger.log(originator + '.' + funcName, message, payload, level)\n}\n\nexport default class ActivityMonitorModel {\n  DEBUG = false\n\n  interval = 10 // how often to check for activity, in seconds\n  elapsedTime = 0 // period of inactivity, in seconds\n  maxInactiveTime = 300 // time after which \"still there?\" prompt is shown, in seconds\n  blockable = null\n  disabled = null\n  currentTabID = null\n  currentURL = null\n\n  /**\n   * Initializes model\n   */\n  init() {\n    if (API.Settings.get('debugActivityMonitor') === true) {\n      this.DEBUG = true\n    }\n\n    log(this.originator, 'init', 'Initializing model', null, 'DEBUG')\n\n    if (this.DEBUG) {\n      this.interval = 1\n      this.maxInactiveTime = 3\n    }\n  }\n\n  /**\n   * Checks whether the maximum inactive time has been exceeded\n   */\n  isMaxInactiveTimeExceeded() {\n    return this.elapsedTime >= this.maxInactiveTime\n  }\n\n  /**\n   * Checks whether the selected tab is blockable\n   */\n  isBlockable() {\n    return this.blockable === true\n  }\n\n  /**\n   * Checks whether the ActivityMonitor is disabled\n   */\n  isDisabled() {\n    if (this.disabled === null) {\n      this.disabled = API.Settings.get('disableActivityMonitor') === true\n    }\n\n    return this.disabled\n  }\n\n  /**\n   * Toggles the ActivityMonitor's disabled flag to its boolean opposite\n   */\n  toggle() {\n    var disabled = this.isDisabled()\n    var action = disabled ? 'Enabling' : 'Disabling'\n\n    log(this.originator, 'toggle', action + ' activity monitor')\n\n    this.disabled = !disabled\n\n    API.Settings.set({ disableActivityMonitor: this.disabled })\n  }\n}\n"],"names":["log","originator","funcName","message","payload","level","Logger","ActivityMonitorModel","__publicField","API","disabled","action"],"mappings":"yOAYA,IAAIA,EAAM,SAAUC,EAAYC,EAAUC,EAASC,EAASC,EAAO,CACjEC,EAAO,IAAIL,EAAa,IAAMC,EAAUC,EAASC,EAASC,CAAK,CACjE,EAEe,MAAME,CAAqB,CAA3B,cACbC,EAAA,aAAQ,IAERA,EAAA,gBAAW,IACXA,EAAA,mBAAc,GACdA,EAAA,uBAAkB,KAClBA,EAAA,iBAAY,MACZA,EAAA,gBAAW,MACXA,EAAA,oBAAe,MACfA,EAAA,kBAAa,MAKb,MAAO,CACDC,EAAI,SAAS,IAAI,sBAAsB,IAAM,KAC/C,KAAK,MAAQ,IAGfT,EAAI,KAAK,WAAY,OAAQ,qBAAsB,KAAM,OAAO,EAE5D,KAAK,QACP,KAAK,SAAW,EAChB,KAAK,gBAAkB,EAE1B,CAKD,2BAA4B,CAC1B,OAAO,KAAK,aAAe,KAAK,eACjC,CAKD,aAAc,CACZ,OAAO,KAAK,YAAc,EAC3B,CAKD,YAAa,CACX,OAAI,KAAK,WAAa,OACpB,KAAK,SAAWS,EAAI,SAAS,IAAI,wBAAwB,IAAM,IAG1D,KAAK,QACb,CAKD,QAAS,CACP,IAAIC,EAAW,KAAK,WAAY,EAC5BC,EAASD,EAAW,WAAa,YAErCV,EAAI,KAAK,WAAY,SAAUW,EAAS,mBAAmB,EAE3D,KAAK,SAAW,CAACD,EAEjBD,EAAI,SAAS,IAAI,CAAE,uBAAwB,KAAK,SAAU,CAC3D,CACH"}