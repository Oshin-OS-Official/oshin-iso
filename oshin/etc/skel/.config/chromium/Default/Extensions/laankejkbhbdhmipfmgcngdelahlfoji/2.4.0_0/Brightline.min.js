/** @license Brightline.js | MIT License | https://github.com/wmbenedetto/brightline.js#mit-license */(function(b,d){var y=function(e){if(typeof e=="object"&&e!==null){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}return typeof e>"u"||e===null||e===""},P=function(e,t){for(var n=0;n<t.length;n++)if(e===t[n])return!0;return!1},N=function(e){return typeof e=="object"&&e!==null&&typeof e.length=="number"},c=function(e){return typeof e=="object"&&e!==null&&typeof e.length!="number"},g=function(e,t,n){t=typeof t>"u"?[]:t,n=typeof n>"u"?{}:n;var i,s,o;for(var a in e)e.hasOwnProperty(a)&&(i=a,s=e[a],t.push(i),typeof s=="object"&&s!==null?n=g(s,t,n):(o=t.join("."),n[o]=s),t.pop());return n},u=function(e){return e.replace(/^\s\s*/,"").replace(/\s\s*$/,"")},f=function(e){this.name=e,this.content="",this.touched=0,this.variables=[],this.parsedContent=[],this.variableCache={},this.usedVariables={}};f.prototype={NODE_ID:null,name:null,content:null,touched:null,variables:null,parsedContent:null,variableCache:null,usedVariables:null,reset:function(){this.parsedContent=[],this.usedVariables={},this.touched=0},isAlreadyParsed:function(e){return e in this.usedVariables},getName:function(){return this.name},getParsedContent:function(){return this.parsedContent},addParsedContent:function(e){this.parsedContent.push(e)},setParsedContent:function(e){this.parsedContent=e},getContent:function(){return this.content},setContent:function(e){this.content=e},setVariables:function(e){this.variables=e},getVariables:function(){return this.variables},setTouched:function(e){this.touched=e},touch:function(){this.touched+=1},getTouched:function(){return this.touched},getVariableCache:function(){return this.variableCache},setUsedVariable:function(e,t){this.usedVariables[e]=t},getNodeID:function(){return this.getName()}};var C=function(){this.childParentMap={},this.nodes={},this.numNodes=0,this.tree={}};C.prototype={childParentMap:null,nodes:null,numNodes:null,tree:null,log:function(e,t,n,i){},addNode:function(e,t){this.nodes[t]=e,this.numNodes+=1},getNode:function(e){return this.hasNode(e)?this.nodes[e]:null},getNodes:function(e){if(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=this.getNode(e[n]);return t}return this.nodes},removeNode:function(e){if(this.hasNode(e)){try{delete this.nodes[e]}catch{this.nodes[e]=d}this.numNodes-=1}},hasNode:function(e){return e in this.nodes},isEmpty:function(){for(var e in this.nodes)if(this.nodes.hasOwnProperty(e))return!1;return!0},has:function(e){return this.hasNode(e)},getNodeID:function(e){if(typeof e=="string"||typeof e=="number")return e;if(typeof e=="object"&&e!==null&&typeof e.getNodeID=="function")return e.getNodeID();throw new Error("[Tree.getNodeID()] Cannot get node ID")},addChild:function(e,t){var n=this.getNodeID(e),i=this.getNodeID(t);if(this.hasParent(t))throw new Error("[Tree.addChild()] Child node "+i+" already has a parent");if(n===i)throw new Error("[Tree.addChild()] Parent and child node are the same. You cannot add a parent node as a child of itself, or vice-versa.");if(this.hasNode(i))throw new Error("[Tree.addChild()] The nodeID "+i+" is already in use");this.hasNode(n)||this.addNode(e,n),this.log("addChild","Adding child",{parent:e,child:t},"DEBUG"),this.addNode(t,i),n in this.tree||(this.tree[n]=[]),this.tree[n].push(i),this.childParentMap[i]=n},addChildren:function(e,t){if(!N(t))throw new Error("[Tree.addChildren()] Children added to Tree must in an array");for(var n=0;n<t.length;n++)this.addChild(e,t[n])},getChild:function(e){if(!this.hasNode(e))throw new Error("[Tree.getChild()] Cannot get non-existent node "+e+" from Tree");return this.getNode(e)},getChildren:function(e){var t=this.getNodeID(e);return t in this.tree?this.getNodes(this.tree[t]):{}},hasChild:function(e,t){var n=this.getNodeID(e),i=this.getNodeID(t);return i in this.childParentMap?n===this.childParentMap[i]:!1},hasChildren:function(e){var t=this.getNodeID(e);return t in this.tree&&this.tree[t].length>0},removeChild:function(e,t){if(!this.isChildOf(e,t))throw new Error("[Tree.removeChild()] Cannot remove child. This node is not a child of the given parent.");for(var n=this.getNodeID(e),i=this.getNodeID(t),s=this.tree[n],o=0;o<s.length;o++)if(s[o]===i){s.splice(o,1);break}try{delete this.childParentMap[i]}catch{this.childParentMap[i]=d}if(s.length===0)try{delete this.tree[n]}catch{this.tree[n]=d}this.removeNode(i),this.hasChildren(i)&&this.removeChildren(i)},removeChildren:function(e,t){typeof t>"u"&&this.hasChildren(e)&&(t=this.getChildren(e));for(var n in t)t.hasOwnProperty(n)&&this.removeChild(e,t[n])},isChildOf:function(e,t){return this.hasChild(e,t)},addParent:function(e){if(!this.isEmpty())throw new Error("[Tree.addParent()] Cannot add lone parent to a Tree that already has nodes in it. Use Tree.addChild(parent,child) instead.");var t=this.getNodeID(e);if(this.hasNode(t))throw new Error("[Tree.addParent()] Parent's node id must be unique.");this.addNode(e,t),t in this.tree||(this.tree[t]=[])},getParent:function(e){if(!this.hasParent(e))return!1;var t=this.getParentNodeID(e);return this.getNode(t)},hasParent:function(e){var t=this.getParentNodeID(e);return t!==null},getParentNodeID:function(e){var t=null;if((typeof e=="string"||typeof e=="number")&&e in this.childParentMap)t=this.childParentMap[e];else if(typeof e=="object"&&e!==null&&typeof e.getNodeID=="function"){var n=e.getNodeID();t=n in this.childParentMap?this.childParentMap[n]:null}return t},isParent:function(e){return this.hasChildren(e)},remove:function(e){var t=this.getNodeID(e);if(this.hasParent(t)){var n=this.getParent(t);this.removeChild(n,e)}else this.isParent(e)&&this.removeChildren(e);this.removeNode(t)}};var p=function(e,t){return this.blocks=new C,this.currentBlock=null,this.currentScope=null,this.usedVariables={},this.variableCache={},c(t)&&(r=t.logLevel||"ERROR",this.name=t.name||null),typeof e=="string"&&this.process(e),this.getAPI()};p.prototype={blocks:null,currentBlock:null,currentScope:null,name:null,usedVariables:null,variableCache:null,getAPI:function(){return{set:this.set.bind(this),setScope:this.setScope.bind(this),clearScope:this.clearScope.bind(this),touch:this.touch.bind(this),parse:this.parse.bind(this),render:this.render.bind(this),snip:this.snip.bind(this),setLogLevel:this.setLogLevel.bind(this),setName:this.setName.bind(this),each:this.each.bind(this)}},setLogLevel:function(e){r=e},setName:function(e){this.name=e},log:function(e,t,n,i){},set:function(){var e=Array.prototype.slice.call(arguments),t=null,n=null,i=!1;return c(e[0])?(t=e[0],i=e[1],this.setObjectVars(t,i)):(t=e[0],n=e[1],i=e[2],typeof n=="function"?n=n():typeof n>"u"&&(n=null),this.isValidKeyValuePair(t,n)&&(this.currentScope===null||i?this.variableCache[t]=n:this.currentScope.variableCache[t]=n)),this},each:function(){var e=Array.prototype.slice.call(arguments),t=e[0],n=e[1],i=null,s=null;typeof e[2]=="string"?i=e[2]:typeof e[2]=="function"&&(s=e[2]),!s&&typeof e[3]=="function"&&(s=e[3]);for(var o in t)t.hasOwnProperty(o)&&(c(t[o])?this.set(t[o]):i&&this.set(i,t[o]),s&&s(t[o],o),this.parse(n))},setScope:function(e){if(!this.hasBlock(e))throw new Error("["+this.name+" Brightline.setScope()] Cannot set scope to non-existent block: "+e);return this.currentScope=this.getBlock(e),this},clearScope:function(e){return e=typeof e>"u"?!0:e,!e&&this.currentScope!==null&&(this.currentScope.variableCache={},this.currentScope.usedVariables={}),e&&(this.currentScope=null),this},touch:function(e){var t=this.getBlock(e);return t.touch(),this},parse:function(e,t){e=typeof e>"u"?"__root__":e,t=typeof t>"u"?!0:t;var n=this.getBlock(e);return t?n.setTouched(1):n.setTouched(0),this.currentBlock=n.getName(),this.parseBlock(n),this.clearUsedVariablesFromCache(),this.clearScope(!1),n.setTouched(0),this.currentBlock="__root__",n},render:function(e){e=typeof e>"u"?"__root__":e;var t=this.parse(e),n=u(t.getParsedContent().join(`
`));return this.clearScope(),t.reset(),n},snip:function(e){e=typeof e>"u"?"__root__":e;var t=this.parse(e,!1),n=t.getParsedContent(),i=u(n.join(`
`));return i.length===0&&(i=t.getContent()),n=n.slice(0,0-t.getTouched()),t.setParsedContent(n),this.clearScope(),i},setObjectVars:function(e,t){var n=g(e);for(var i in n)n.hasOwnProperty(i)&&this.set(i,n[i],t)},getBlock:function(e){if(!this.hasBlock(e))throw new Error("["+this.name+" Brightline.getBlock()] Cannot get non-existent block: "+e);return this.blocks.getChild(e)},hasBlock:function(e){return this.blocks.has(e)},process:function(e){var t=new f("__root__");t.setContent(e),this.findBlocks(t),this.insertChildBlockPlaceholders(t),this.findVariablesInBlockContent(t),this.blocks.has("__root__")||this.blocks.addParent(t)},findBlocks:function(e){var t=/<!--\s+BEGIN\s+([\.0-9A-Za-z:|_-]+)\s+-->([\s\S]*)<!--\s+END\s+\1\s+-->/mg,n=e.getContent(),i=n.match(t),s=this;if(i)for(var o=0;o<i.length;o++){var a=new RegExp(t).exec(i[o]);if(a){var h=a[1],l=new f(h);if(l.setContent(a[2]),s.blocks.has(h))throw new Error("["+this.name+" Brightline.findBlocks()] Duplicate block name: "+h+". Block names must be unique.");s.blocks.addChild(e,l),s.findBlocks(l),s.insertChildBlockPlaceholders(l),s.findVariablesInBlockContent(l)}}},insertChildBlockPlaceholders:function(e){if(this.blocks.hasChildren(e)){var t=this.blocks.getChildren(e);for(var n in t)t.hasOwnProperty(n)&&function(i){var s=i.getName(),o=e.getContent(),a="<!--\\s+BEGIN\\s+"+s+"\\s+-->([\\s\\S]*)<!--\\s+END\\s+"+s+"\\s+-->",h=o.match(a);h&&e.setContent(o.replace(h[0],"{{__"+s+"__}}"))}(t[n])}},findVariablesInBlockContent:function(e){var t=/(?!\{{__[\.0-9A-Za-z\*:|_-]+__\}})\{{([\.0-9A-Za-z\*:|_-]+)\}}/mg,n=[],i=e.getContent().match(t);if(i){for(var s=0;s<i.length;s++)if(!P(n,i[s])){var o=i[s].replace("{{","").replace("}}","");n.push(o)}e.setVariables(n)}},parseBlock:function(e){var t=this.blocks.getChildren(e);for(var n in t)t.hasOwnProperty(n)&&this.parseBlock(t[n]);return this.currentBlock=e.getName(),this.replaceBlockVariables(e),this.replaceChildBlockPlaceholders(e),e.setTouched(0),e},replaceBlockVariables:function(e){var t=e.getContent(),n=e.getVariables(),i=e.getName(),s=e.getVariableCache();if(n.length>0)for(var o=0;o<n.length;o++){var a=n[o],h="{{"+a+"}}";i===this.currentBlock?a in s?(t=t.replace(h,s[a]),e.setUsedVariable(a,!0),e.touched=1):a in this.variableCache&&!e.isAlreadyParsed(a)?(t=t.replace(h,this.variableCache[a]),this.usedVariables[a]=!0,e.touched=1):t=t.replace(h,""):t=t.replace(h,"")}for(var l=e.getTouched(),v=0;v<l;v++)e.addParsedContent(t)},replaceChildBlockPlaceholders:function(e){var t=this.getParsedContent(e),n=this.blocks.getChildren(e);if(!y(n)){for(var i in n)if(n.hasOwnProperty(i)){var s="{{__"+n[i].getName()+"__}}",o=u(n[i].parsedContent.join(""));for(var a in t)t.hasOwnProperty(a)&&t[a].indexOf(s)>-1&&(t[a]=t[a].replace(s,o));n[i].parsedContent=[]}e.setParsedContent(t)}},getParsedContent:function(e){if(e.parsedContent.length===0&&this.blocks.hasChildren(e)){var t=this.blocks.getChildren(e);for(var n in t)if(t.hasOwnProperty(n)&&t[n].parsedContent.length>0){this.touch(e.getName()),this.replaceBlockVariables(e);break}}return e.getParsedContent()},clearUsedVariablesFromCache:function(){for(var e in this.usedVariables)if(this.usedVariables.hasOwnProperty(e))try{delete this.variableCache[e]}catch{this.variableCache[e]=d}this.usedVariables=[]},isValidKeyValuePair:function(e,t){return typeof e=="string"&&(typeof t=="string"&&t.length>0||typeof t=="number"||typeof t=="boolean")}},typeof define=="function"?define(function(){return p}):b.Brightline=p})(window);const m=window.Brightline;export{m as B};
//# sourceMappingURL=Brightline.min.js.map
