{"version":3,"file":"ActivityMonitorController.js","sources":["../src/components/ActivityMonitor/ActivityMonitorController.js"],"sourcesContent":["import Logger from '~/core/Logger'\nimport API from '~/core/CoreAPI'\n\n/**\n * Alias for Logger.log(). Prepends class name to funcName.\n *\n * @param originator The name of the instance to prepend to the log message\n * @param funcName The name of the function generating the log message\n * @param message The message to log\n * @param payload Data object\n * @param level Log level (ERROR, WARN, INFO, DEBUG)\n */\nvar log = function (originator, funcName, message, payload, level) {\n  Logger.log(originator + '.' + funcName, message, payload, level)\n}\n\nexport default class ActivityMonitorController {\n  view = null\n  model = null\n  timer = null\n\n  /**\n   * Initializes controller\n   */\n  init() {\n    log(this.originator, 'init', 'Initializing controller', null, 'DEBUG')\n\n    this.model.init()\n    this.addListeners()\n\n    API.PubSub.publish('ActivityMonitor.component.initialized')\n\n    this.view.bindActivityDetectors()\n\n    // TODO: I really want to do this, but can't because we don't know whether tab is blockable here\n    //            if (this.model.isBlockable() && !this.model.isDisabled()){\n    //                this.activate();\n    //            }\n  }\n\n  /**\n   * Activates ActivityMonitor\n   */\n  activate() {\n    log(this.originator, 'activate', 'Activating ActivityMonitor')\n\n    this.view.bindActivityDetectors()\n    this.startTimer()\n  }\n\n  /**\n   * Adds message listeners\n   */\n  addListeners() {\n    log(this.originator, 'addListeners', 'Adding listeners', null, 'DEBUG')\n\n    var self = this\n\n    API.PubSub.listen('ActivityMonitor.overlay.shown', function () {\n      self.stopTimer()\n    })\n\n    API.PubSub.listen('ActivityMonitor.overlay.hidden', function () {\n      self.resetTimer()\n      self.startTimer()\n    })\n\n    API.PubSub.listen('ActivityMonitor.activity.detected', function () {\n      self.resetTimer()\n    })\n\n    API.PubSub.listen('*.tab.selected', function (message, payload) {\n      self.onTabSelected(payload.tab, payload.blockable)\n    })\n\n    API.PubSub.listen('*.tab.activity', function (message, payload) {\n      if (self.model.blockable && payload.tab?.audible) {\n        self.resetTimer()\n      }\n    })\n\n    API.PubSub.listen('*.page.killed', function (message, payload) {\n      self.killPage(payload.redirectURL)\n    })\n  }\n\n  /**\n   * When tab is selected, stops and resets timer, hides overlay, then\n   * restarts timer, if applicable.\n   *\n   * @param selectedTab\n   * @param blockable\n   */\n  onTabSelected(selectedTab, blockable) {\n    log(\n      this.originator,\n      'onTabSelected',\n      'New tab selected',\n      {\n        selectedTab: selectedTab,\n        blockable: blockable,\n      },\n      'TRACE',\n    )\n\n    /* First, stop timer for tab that was selected previously */\n    if (this.model.currentTabID !== null) {\n      this.stopTimer()\n    }\n\n    /* Next, set newly selected tab as the current tab */\n    this.model.currentTabID = selectedTab.id\n    this.model.currentURL = selectedTab.url\n    this.model.blockable = blockable\n\n    /* Reset the ActivityMonitor timer, since switching tabs means the user is active */\n    this.resetTimer()\n    this.view.hide()\n\n    /* If new tab is a blacklisted url, start the ActivityMonitor timer */\n    if (blockable && !this.model.isDisabled()) {\n      this.startTimer()\n    }\n  }\n\n  /**\n   * Starts the timer\n   */\n  startTimer() {\n    log(\n      this.originator,\n      'startTimer',\n      'Starting timer with ' + this.model.interval + '-second interval',\n    )\n\n    clearInterval(this.timer)\n\n    this.timer = setInterval(this.tick.bind(this), this.model.interval * 1000)\n  }\n\n  /**\n   * Stops the timer\n   */\n  stopTimer() {\n    log(this.originator, 'stopTimer', 'Stopping timer')\n\n    clearInterval(this.timer)\n\n    this.timer = null\n  }\n\n  /**\n   * Resets the timer to zero\n   */\n  resetTimer() {\n    log(this.originator, 'resetTimer', 'Resetting timer', null, 'TRACE')\n\n    this.model.elapsedTime = 0\n  }\n\n  /**\n   * Kills page by redirecting to redirectURL\n   *\n   * @param redirectURL The url to which the page should be redirected\n   */\n  killPage(redirectURL) {\n    API.Analytics.event('BLOCK_PAGE', {\n      isNuclear: API.NuclearOption.isActive(),\n      hostname: window.location.hostname,\n    })\n\n    log(this.originator, 'killPage', 'Killing page', redirectURL, 'INFO')\n\n    top.location.href =\n      redirectURL +\n      '?content&customMsg=' +\n      API.Settings.get('customStayFocusdMsg')\n  }\n\n  /**\n   * Increments elapsedTime counter\n   */\n  tick() {\n    this.model.elapsedTime += this.model.interval\n\n    log(\n      this.originator,\n      'tick',\n      'Elapsed time: ' + this.model.elapsedTime + ' secs',\n      null,\n      'DEBUG',\n    )\n\n    if (this.model.isMaxInactiveTimeExceeded()) {\n      log(\n        this.originator,\n        'tick',\n        'Max inactive time exceeded: ',\n        this.model.maxInactiveTime,\n        'INFO',\n      )\n\n      this.view.show()\n    }\n  }\n}\n"],"names":["log","originator","funcName","message","payload","level","Logger","ActivityMonitorController","__publicField","API","self","_a","selectedTab","blockable","redirectURL"],"mappings":"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"}